{"version":3,"sources":["serviceWorker.ts","constants/constants.tsx","components/splash.tsx","components/message.tsx","components/monkeyrace.tsx","functions/fetchfunctions.tsx","components/itemphoto.tsx","components/main.tsx","components/user.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","xheader","Content-Type","emojiMatch","item","Splash","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","PIN","React","createRef","state","redoAuth","isAuthenticated","tryPin","bind","assertThisInitialized","tryPinQuick","pin","length","_this2","cbTryPinB","authFlag","current","value","setState","authenticatePin","_this3","react_default","a","createElement","react_router","to","className","Image","src","style","display","InputGroup","FormControl","autoFocus","ref","placeholder","aria-label","aria-describedby","onChange","textAlign","width","Append","cursor","onClick","Text","Fragment","color","Component","MonkeyMessage","monkeyImage","getMonkeyImage","monkeyDir","Math","floor","random","toString","height","Modal","animation","centered","show","Header","Title","Body","fluid","roundedCircle","Footer","Button","variant","monkeyDanceToggle","logOff","emoji","require","dateFormat","MonkeyRace","monkeyMonth","Date","bananaHistory","getBananas","getBananaHistory","bananaCount","bananaCountString","i","emojify","eventKey","callback","bananaData","fetch","method","headers","body","then","res","json","returnjson","console","log","success","data","getBananaWinnerHistory","getBananaMoochHistory","Tabs","defaultActiveKey","id","onSelect","Tab","title","ListGroup","users","map","user","ListGroupItem","key","alignItems","name","banana_count","monkeyrace_MonkeyTab","label","gif_image","monkeyRaceToggle","MonkeyTab","_this4","banMonth","banUserName","banCount","MonkeyItemPhoto","itemPhotoLocation","size","onHide","showItemToggle","searchEmoji","itemName","itemName_lcase","toLowerCase","substr","slice","includes","searchList","search","Main","newItem","monkeyDance","monkeyRace","monkeyItemPhoto","ui","updateUser","monkeyChange","monkeyLoaded","showCamera","photoTaken","itemPhoto","itemStatusList","distinctItems","monkeyData","monkeyItemAction","monkeyItemAction_Do","lookupStatus","addMonkeyItem","monkeyDo","monkeyAll","getBananaCount","onTakePhoto","toggleCamera","dataURI","tempUI","user_id","lookupUserBananas","filter","el","status","statusID","parseInt","actionType","action_type","status_verb","status_active","event","eventitemOrdinal","preventDefault","target","eventVal","itemOrdinal","newState","lookupObj","itemActionType","itemStatus","itemStatusID","itemStatusVerb","itemStatusActive","itemUserID","itemUserName","itemChanged","mData","new_monkeyData","groceryListItems","push","itemNew","itemID","grocery_list_id","itemDate","date","itemCount","count","itemCode","code","itemNotes","notes","status_id","username","photo","itemPhotoURI","photo_location","new_ui","groceryItemStatus","distinctGroceryListItems","JSON","stringify","newItemString","newItemDetails","split","newMonkeyItemList","newItemStrip","newQuantity","newNotes","replace","charAt","toUpperCase","getInstance","clear","userParams_state","_this5","monkeyDataVar","getMonkeyData","alert","_this6","newMonkeyState","monkeyAllStatus","arg","newUI","_this7","_this8","_this9","message","monkeyrace","itemphoto","Navbar","fixed","sticky","bg","expand","verticalAlign","flexDirection","onToggle","Brand","Toggle","aria-controls","Collapse","float","Prepend","lib","selectHintOnEnter","options","k","clearButton","labelKey","emptyLabel","typeahead","getInput","build_default","dataUri","imageType","IMAGE_TYPES","JPG","imageCompression","isMaxResolution","idealFacingMode","FACING_MODES","ENVIRONMENT","isDisplayStartCameraError","isImageMirror","backgroundColor","getTime","Form","Control","as","isSame","action_sameuser","action_new","lookup_item","alignContent","Nav","NavItem","Link","alt","visibility","fontWeight","User","userSelfieSubmit","userName","email","sms","notify","changeUser","newSelfie","userSelfie","selfieChange","needSave","updateUserLocal","toggleSelfie","params","checked","production","updateUserSelfie","user_MonkeyPicture","onSubmit","Card","Group","react_router_dom","disabled","type","Row","controlId","Label","column","sm","Col","defaultValue","span","offset","Check","defaultChecked","MonkeyPicture","closeButton","PrivateRoute","component","rest","objectWithoutProperties","assign","render","AppContainer","auth","validatePin","userParams","newUser","exact","path","components_splash","src_PrivateRoute","ReactDOM","src_AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4afbc709.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n//export const restAPIURL = 'http://nodeserver:8080';\r\n//export const restAPIURL = 'http://localhost:3000';\r\n\r\nexport const restAPIURL = process.env.NODE_ENV === 'production' ? '' : 'https://nodeserver:8088';\r\n\r\nexport const xheader = {\r\n    \"Content-Type\": \"application/json\"\r\n};\r\n\r\nexport interface ImMonkeyData {\r\n    groceryListItems: Array<ImMonkeyData_GroceryListItems>;\r\n    users: Array<ImMonkeyData_Users>;\r\n    groceryItemStatus: Array<ImMonkeyData_Status>;\r\n    distinctGroceryListItems: Array<ImMonkeyData_Lookup>;\r\n};\r\n\r\nexport interface ImMonkeyData_Users {\r\n    user_id: number;\r\n    name: string;\r\n    pin?: string;\r\n    email?: string;\r\n    sms?: string;\r\n    notify?: boolean;\r\n    banana_count?: number;\r\n};\r\n\r\nexport interface ImMonkeyData_Status {\r\n    statusID: number;\r\n    status: string;\r\n    action_new: boolean;\r\n    action_sameuser: boolean;\r\n    action_type: number;\r\n    status_verb: string;\r\n    status_active: boolean;\r\n};\r\n\r\nexport interface ImMonkeyData_Lookup {\r\n    item: string;\r\n    code: string;\r\n};\r\n\r\nexport interface ImMonkeyData_GroceryListItems {\r\n    grocery_list_id: number;\r\n    date: string;\r\n    item: string;\r\n    count: number;\r\n    code: string;\r\n    notes: string;\r\n    status_id: number;\r\n    status: string;\r\n    status_verb: string;\r\n    status_active: boolean;\r\n    user_id: number;\r\n    username: string;\r\n    photo: boolean;\r\n    photo_location: string;\r\n};\r\n\r\nexport interface ImMonkeyData_State {\r\n    itemNew: boolean;\r\n    itemActionType: number;\r\n    itemID: number;\r\n    itemDate: string;\r\n    itemName: string;\r\n    itemCount: number;\r\n    itemCode: string;\r\n    itemNotes: string;\r\n    itemStatusID: number;\r\n    itemStatus: string;\r\n    itemStatusVerb: string;\r\n    itemStatusActive: boolean;\r\n    itemUserID: number;\r\n    itemUserName: string;\r\n    itemChanged: boolean;\r\n    itemPhoto: boolean;\r\n    itemPhotoURI: any;\r\n};\r\n\r\nexport interface ImMonkeyBanana_History {\r\n    banMonth: string;\r\n    banUserID: number;\r\n    banUserName: string;\r\n    banCount: number;\r\n}\r\n\r\nexport interface Imemoji_Match {\r\n    item: string;\r\n    match: string;\r\n}\r\n\r\nexport const emojiMatch: Array<Imemoji_Match> = [\r\n    { item: \"natural\", match: \":beer:\" },\r\n    { item: \"toilet\", match: \":toilet:\" },\r\n    { item: \"water\", match: \":droplet:\" },\r\n    { item: \"dud:\", match: \":chocolate_bar:\" },\r\n    { item: \"yogurt\", match: \":custard:\" },\r\n    { item: \"pudding\", match: \":custard:\" },\r\n    { item: \"spoon\", match: \":fork_and_knife:\" },\r\n    { item: \"fork\", match: \":fork_and_knife\" },\r\n    { item: \"utensil\", match: \":fork_and_knife:\" },\r\n    { item: \"pizza\", match: \":pizza:\" },\r\n    { item: \"seagram\", match: \":cocktail:\" },\r\n    { item: \"chicken\", match: \":poultry_leg:\" },\r\n    { item: \"pasta\", match: \":spaghetti:\" },\r\n    { item: \"juice\", match: \":tropical_drink:\" },\r\n    { item: \"milk\", match: \":sake:\" },\r\n    { item: \"lemonade\", match: \":lemon:\" },\r\n    { item: \"arnold\", match: \":lemon:\" },\r\n    { item: \"bagel\", match: \":doughnut:\" },\r\n    { item: \"potato\", match: \":sweet_potato:\" },\r\n    { item: \"sprite\", match: \":sparkles:\" },\r\n    { item: \"polar\", match: \":dizzy:\" },\r\n    { item: \"toothpaste\", match: \":grin:\" },\r\n    { item: \"tylenol\", match: \":pill:\" },\r\n    { item: \"towel\", match: \":page_with_curl:\" },\r\n    { item: \"trash\", match: \":pouch:\" },\r\n    { item: \"egg\", match: \":egg:\" },\r\n    { item: \"ketchup\", match: \":tomato:\" },\r\n    { item: \"salsa\", match: \":tomato:\" },\r\n    { item: \"ham\", match: \":pig2:\" },\r\n    { item: \"mac\", match: \":ramen:\" },\r\n    { item: \"gum\", match: \":seedling:\" },\r\n    { item: \"tea\", match: \":coffee:\" },\r\n    { item: \"photo\", match: \":camera:\" },\r\n] \r\n\r\n\r\n","import React from 'react';\r\nimport { Image, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './splash.css';\r\nimport '../functions/fetchfunctions';\r\n\r\n\r\ninterface IMyStateInterface {\r\n    redoAuth: boolean,\r\n}\r\n\r\ninterface IMyPropsInterface {\r\n    isAuthenticated: boolean,\r\n    authenticatePin: Function,\r\n}\r\n\r\nclass Splash extends React.Component<IMyPropsInterface, IMyStateInterface>{\r\n    private PIN: any;\r\n    constructor(props: IMyPropsInterface) {\r\n        super(props);    \r\n        this.PIN = React.createRef();\r\n        this.state = {\r\n            redoAuth: this.props.isAuthenticated,\r\n        };\r\n        this.tryPin = this.tryPin.bind(this);\r\n        this.tryPinQuick = this.tryPinQuick.bind(this);\r\n    }\r\n\r\n    tryPinQuick(pin: string) {\r\n        if (pin.length === 4) {this.tryPin(pin)}\r\n    }\r\n\r\n    tryPin(pin: string) {\r\n        const cbTryPin = (authFlag: boolean) => {\r\n            if (this.PIN.current) {this.PIN.current.value = ''};\r\n            if (!authFlag) { this.setState(() => { return { redoAuth: !authFlag } }) };\r\n        }\r\n        const cbTryPinB = cbTryPin.bind(this);\r\n        this.props.authenticatePin(pin, cbTryPinB);      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            !this.props.isAuthenticated ?\r\n            < div className=\"Splash\" >\r\n                <br />\r\n                <Image className=\"Image\" src='./images/grocerymonkey.jpg' />\r\n                <br />\r\n                <br />\r\n                <h1>Grocery Monkey</h1>\r\n                <br />\r\n                <div style={{ display: \"inline-block\" }}>\r\n                    <InputGroup >\r\n                            <FormControl\r\n                                autoFocus\r\n                                ref={this.PIN}\r\n                                placeholder=\"User PIN\"\r\n                                aria-label=\"User PIN\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                onChange={() => this.tryPinQuick(this.PIN.current.value)}\r\n                                style={{ textAlign:\"center\", width:\"100px\"}}\r\n                            />\r\n                            <InputGroup.Append style={{ cursor: \"pointer\" }} onClick={() => { this.tryPin(this.PIN.current.value) }}>\r\n                            <InputGroup.Text>Login</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                    {(this.state.redoAuth) ? <><br /><span style={{ color: \"darkred\" }}><h3>INVALID PIN</h3></span></> : null}\r\n                </div>\r\n                </div >\r\n                : <Redirect to=\"/main\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Splash;\r\n","import React from 'react';\r\nimport { Button, Modal, Image } from 'react-bootstrap';\r\nconst monkeyDir: string = '/images/monkey';\r\n\r\n\r\ninterface Im_MonkeyMessage_Props {\r\n    show: boolean;\r\n    monkeyDanceToggle: any;\r\n    logOff: any;\r\n}\r\n\r\ninterface Im_MonkeyMessage_State {\r\n    monkeyImage: string;\r\n}\r\n\r\n\r\nclass MonkeyMessage extends React.Component<Im_MonkeyMessage_Props, Im_MonkeyMessage_State> {\r\n    constructor(props: Im_MonkeyMessage_Props) {\r\n        super(props);\r\n        this.state = { monkeyImage: ''};\r\n        this.getMonkeyImage = this.getMonkeyImage.bind(this);\r\n    }\r\n\r\n    getMonkeyImage(): string {\r\n        var monkeyImageString: string;\r\n        var monkeyImageDirLength: number = 1;\r\n        monkeyImageString = monkeyDir + '/monkey' + Math.floor(1+(Math.random() * monkeyImageDirLength)).toString() + '.gif';\r\n        return monkeyImageString;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(() => { return { monkeyImage: this.getMonkeyImage() } });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:\"90%\",height:\"50%\"}}>\r\n                <Modal animation centered show={this.props.show} >\r\n                        <Modal.Header >\r\n                            <Modal.Title>You are a Grocery Monkey!</Modal.Title>\r\n                        </Modal.Header>\r\n                    <Modal.Body style={{ textAlign: \"center\" }}>\r\n                        <div style={{ width: \"100%}\" }}>\r\n                            <Image fluid roundedCircle src={this.state.monkeyImage} />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.monkeyDanceToggle}>\r\n                            More Monkey Stuff\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.props.logOff}>\r\n                            No More Monkey\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonkeyMessage;\r\n","import React from 'react';\r\nimport { Button, Modal, Image, ListGroup, ListGroupItem, Tabs, Tab } from 'react-bootstrap';\r\nimport { ImMonkeyData_Users, ImMonkeyBanana_History } from '../constants/constants';\r\nimport { getBananaWinnerHistory } from '../functions/fetchfunctions';\r\nimport { getBananaMoochHistory } from '../functions/fetchfunctions';\r\nconst emoji = require('node-emoji');\r\nconst dateFormat = require('dateformat');\r\n\r\n\r\n\r\ninterface Im_MonkeyMessage_Props {\r\n    show: boolean;\r\n    monkeyRaceToggle: any;\r\n    users: Array<ImMonkeyData_Users>;\r\n    logOff: any;\r\n}\r\n\r\ninterface Im_MonkeyMessage_State {\r\n    monkeyImage: string;\r\n    monkeyMonth: string;\r\n    bananaHistory: Array<ImMonkeyBanana_History>;\r\n}\r\n\r\nclass MonkeyRace extends React.Component<Im_MonkeyMessage_Props, Im_MonkeyMessage_State> {\r\n    constructor(props: Im_MonkeyMessage_Props) {\r\n        super(props);\r\n        this.state = {\r\n            monkeyImage: './images/monkey/monkey_running.gif',\r\n            monkeyMonth: dateFormat(new Date(), 'mmmm'),\r\n            bananaHistory: [],\r\n        };\r\n        this.getBananas = this.getBananas.bind(this);\r\n        this.getBananaHistory = this.getBananaHistory.bind(this);\r\n    }\r\n\r\n    getBananas(bananaCount: number|undefined): string {\r\n        let bananaCountString: string = '';\r\n        if (bananaCount) {\r\n            for (var i: number = 1; i <= bananaCount; i++) {\r\n                bananaCountString = bananaCountString + emoji.emojify(\":banana:\");\r\n            }\r\n            return bananaCountString;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getBananaHistory(eventKey:string): void {\r\n        const callback = (bananaData: Array<ImMonkeyBanana_History>): void => {\r\n            this.setState(() => { return { monkeyMonth:\"Historic\", bananaHistory: bananaData } })\r\n        }\r\n        if (eventKey === \"monkeys\") {\r\n            getBananaWinnerHistory(callback.bind(this));\r\n        } else if (eventKey === \"mooches\") {\r\n            getBananaMoochHistory(callback.bind(this));\r\n        } else {\r\n            this.setState(() => { return { monkeyMonth: dateFormat(new Date(), 'mmmm') } });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:\"90%\",height:\"95%\"}}>\r\n                <Modal animation centered show={this.props.show} >\r\n                    <Modal.Header >\r\n                        <Modal.Title>\r\n                            <Image fluid roundedCircle width=\"60\" height=\"60\" src={this.state.monkeyImage} />\r\n                            {this.state.monkeyMonth + ' Monkey Race!'}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ textAlign: \"center\" }}>\r\n                        <Tabs defaultActiveKey=\"current\" id=\"main_tab\" onSelect={(eventKey: string) => { this.getBananaHistory(eventKey) }}>\r\n                            <Tab eventKey=\"current\" title=\"Current\">\r\n                                <div style={{ width: \"100%}\" }}>\r\n                                    <ListGroup>\r\n                                        {this.props.users.map((user: ImMonkeyData_Users, i: number) => {\r\n                                            return (\r\n                                                <ListGroupItem key={i} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                                    <div style={{ width: \"20%\", textAlign: \"center\", display: \"inline-block\"}}>\r\n                                                        <Image width=\"40\" height=\"40\" src={'./images/users/' + user.name + '.jpg'} roundedCircle />\r\n                                                        <br />\r\n                                                        {user.name}\r\n                                                    </div>\r\n                                                    <div style={{ width: \"80%\", textAlign: \"left\", display: \"inline-block\" }}>\r\n                                                        {'Banana Count: (' + user.banana_count + ')  ' + this.getBananas(user.banana_count)}\r\n                                                    </div>\r\n                                                </ListGroupItem>\r\n                                            )\r\n                                        })}\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </Tab>\r\n                            <Tab eventKey=\"monkeys\" title=\"Monkeys\" >\r\n                                <MonkeyTab label=\"Bananas\" emoji=\":banana:\" gif_image=\"./images/star.gif\" data={this.state.bananaHistory} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"mooches\" title=\"Mooches\" >\r\n                                <MonkeyTab label=\"Requests\" emoji=\":speak_no_evil:\" gif_image=\"./images/question.gif\" data={this.state.bananaHistory} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.monkeyRaceToggle}>\r\n                            More Monkey Stuff\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.props.logOff}>\r\n                            No More Monkey\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IM_MonkeyTab_Props {\r\n    label: string;\r\n    emoji: string;\r\n    gif_image: string;\r\n    data: Array<ImMonkeyBanana_History>;\r\n}\r\n\r\nclass MonkeyTab extends React.Component<IM_MonkeyTab_Props, {}> {\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <ListGroup>\r\n                    {this.props.data.map((bananaHistory: ImMonkeyBanana_History, i: number) => {\r\n                        return (\r\n                            <ListGroupItem key={i} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <div style={{ width: \"22%\", textAlign: \"center\", display: \"inline-block\" }}>\r\n                                    <Image width=\"50\" height=\"50\" src = {this.props.gif_image} />\r\n                                    <br />\r\n                                    {dateFormat(new Date(bananaHistory.banMonth), 'mmmm')}\r\n                                </div>\r\n                                <div style={{ width: \"32%\", textAlign: \"center\", display: \"inline-block\", cursor:\"pointer\" }}>\r\n                                    <Image width=\"40\" height=\"40\" src={'./images/users/' + bananaHistory.banUserName + '.jpg'} roundedCircle />\r\n                                    <br />\r\n                                    {bananaHistory.banUserName}\r\n                                </div>\r\n                                <div style={{ width: \"46%\", textAlign: \"center\", display: \"inline-block\" }}>\r\n                                    {this.props.label + ': ' + emoji.emojify(this.props.emoji) + \"(\" + bananaHistory.banCount + \")\"}\r\n                                </div>\r\n                            </ListGroupItem>\r\n                        )\r\n                    })}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonkeyRace;\r\n","\r\nimport { restAPIURL, xheader, ImMonkeyData_Users, ImMonkeyData_State } from '../constants/constants';\r\n\r\n\r\nexport const validatePin = function (pin: string, callback: Function): void {\r\n    fetch(restAPIURL + '/authenticateuser', { method: 'POST', headers: xheader, body: JSON.stringify({ pin: pin }) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            callback(returnjson.success, returnjson.user);\r\n        });\r\n}\r\n\r\nexport const getAllMonkeyData = function (auth:boolean, callback: Function):void {\r\n    fetch(restAPIURL + '/getmonkeydata', { method: 'POST', headers: xheader, body: JSON.stringify({}) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            returnjson.success\r\n                ? callback(returnjson.data)\r\n                : callback({})\r\n        })\r\n}\r\n\r\nexport const updateUser = function (userParams: ImMonkeyData_Users, callback: Function): void {\r\n    fetch(restAPIURL + '/updateuser', { method: 'PUT', headers: xheader, body: JSON.stringify(userParams) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            returnjson.success\r\n                ? callback(returnjson.user)\r\n                : callback({})\r\n        })\r\n}\r\n\r\nexport const updateMonkeyData = function (userParams_state: Array<ImMonkeyData_State>, callback: Function): void {\r\n    fetch(restAPIURL + '/updatemonkeydata', { method: 'PUT', headers: xheader, body: JSON.stringify(userParams_state) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            returnjson.success\r\n                ? callback(true)\r\n                : callback(false)\r\n        })\r\n\r\n}\r\n\r\nexport const getBananaWinnerHistory = function (callback: Function): void {\r\n    fetch(restAPIURL + '/getbananawinnerhistory', { method: 'POST', headers: xheader, body: '' })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            console.log(returnjson);\r\n            returnjson.success\r\n                ? callback(returnjson.data)\r\n                : callback({})\r\n        })\r\n}\r\n\r\nexport const getBananaMoochHistory = function (callback: Function): void {\r\n    fetch(restAPIURL + '/getbananamoochhistory', { method: 'POST', headers: xheader, body: '' })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            console.log(returnjson);\r\n            returnjson.success\r\n                ? callback(returnjson.data)\r\n                : callback({})\r\n        })\r\n}\r\n\r\nexport const updateUserSelfie = function (userName: string, dataURI: any, callback:Function): void {\r\n    let params = { production: restAPIURL.length ? false: true, userName: userName, dataURI: dataURI };\r\n    fetch(restAPIURL + '/updateuserselfie', { method: 'POST', headers: xheader, body: JSON.stringify(params) })\r\n        .then(res => res.json())\r\n        .then((returnjson => {\r\n            console.log(returnjson);\r\n            callback(returnjson.success);\r\n        }))\r\n}","import React from 'react';\r\nimport { Modal, Image } from 'react-bootstrap';\r\n\r\n\r\ninterface Im_ItemProps{\r\n    showItemToggle: Function;\r\n    itemPhotoLocation: any;\r\n}\r\n\r\n\r\nclass MonkeyItemPhoto extends React.Component<Im_ItemProps, {}> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"90%\", height: \"50%\" }}>\r\n                <Modal animation centered show={this.props.itemPhotoLocation} size=\"xl\" onHide={() => { this.props.showItemToggle() }}>\r\n                    <Modal.Body style={{ textAlign: \"center\" }}>\r\n                        <div style={{ width: \"100%}\" }}>\r\n                            <Image fluid style={{ width: \"100%\", height: \"100%\" }} src={this.props.itemPhotoLocation} onClick={() => { this.props.showItemToggle() }}/>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonkeyItemPhoto;\r\n","import React from 'react';\r\nimport { Navbar, Nav, NavItem, Form, InputGroup, ListGroup, Button, Image, ListGroupItem } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport './main.css';\r\nimport { getAllMonkeyData, updateMonkeyData } from '../functions/fetchfunctions';\r\nimport MonkeyMessage from './message';\r\nimport MonkeyRace from './monkeyrace';\r\nimport MonkeyItemPhoto from './itemphoto';\r\nimport { ImMonkeyData, ImMonkeyData_State, ImMonkeyData_Lookup, ImMonkeyData_Status, ImMonkeyData_Users, emojiMatch } from '../constants/constants';\r\n// @ts-ignore\r\nimport Camera, { IMAGE_TYPES, FACING_MODES } from 'react-html5-camera-photo';\r\nconst emoji = require('node-emoji');\r\nconst dateFormat = require('dateformat');\r\n\r\ninterface IMyuiInterface {\r\n    updateUser: boolean;\r\n    monkeyChange: boolean;\r\n    monkeyLoaded: boolean;\r\n    showCamera: boolean;\r\n    photoTaken: boolean;\r\n    itemPhoto: any;\r\n    itemStatusList: Array<ImMonkeyData_Status>;\r\n    distinctItems: Array<ImMonkeyData_Lookup>;\r\n    users: Array<ImMonkeyData_Users>;\r\n};\r\n\r\ninterface IMyPropsInterface {\r\n    isAuthenticated: boolean;\r\n    user: ImMonkeyData_Users;\r\n    logOff():void;\r\n};\r\n\r\ninterface IMyStateInterface {\r\n    isAuthenticated: boolean;\r\n    user: ImMonkeyData_Users;\r\n    ui: IMyuiInterface;\r\n    monkeyData: Array<ImMonkeyData_State>;\r\n    monkeyDance: boolean;\r\n    monkeyRace: boolean;\r\n    monkeyItemPhoto: any;\r\n};\r\n\r\nconst searchEmoji = (itemName: String): string => {\r\n    var itemName_lcase = itemName.toLowerCase();\r\n    if (itemName_lcase.substr(itemName_lcase.length - 1) === 's') { itemName_lcase = itemName_lcase.slice(0, -1) }\r\n    for (var i: number = 0; i < emojiMatch.length; i++) {\r\n        if (itemName_lcase.includes(emojiMatch[i].item)) { return emojiMatch[i].match }\r\n    }\r\n\r\n    var searchList = emoji.search(itemName_lcase);\r\n    if (searchList.length) {\r\n        return ':' + searchList[0].key + ':';\r\n    } else {\r\n        return ':shopping_trolley:';\r\n    }\r\n}\r\n\r\nclass Main extends React.Component<IMyPropsInterface, IMyStateInterface> {\r\n    private newItem: any;\r\n    constructor(props: IMyPropsInterface) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticated: props.isAuthenticated,\r\n            user: props.user,\r\n            monkeyDance: false,\r\n            monkeyRace: false,\r\n            monkeyItemPhoto:null,\r\n            ui: {\r\n                updateUser: false,\r\n                monkeyChange: false,\r\n                monkeyLoaded: false,\r\n                showCamera: false,\r\n                photoTaken: false,\r\n                itemPhoto: null,\r\n                itemStatusList: [],\r\n                distinctItems: [],\r\n                users: [],\r\n            },\r\n            monkeyData: [],\r\n        }\r\n        this.newItem = React.createRef();\r\n        this.monkeyItemAction = this.monkeyItemAction.bind(this);\r\n        this.monkeyItemAction_Do = this.monkeyItemAction_Do.bind(this);\r\n        this.lookupStatus = this.lookupStatus.bind(this);\r\n        this.addMonkeyItem = this.addMonkeyItem.bind(this);\r\n        this.monkeyDo = this.monkeyDo.bind(this);\r\n        this.monkeyAll = this.monkeyAll.bind(this);\r\n        this.monkeyDanceToggle = this.monkeyDanceToggle.bind(this);\r\n        this.monkeyRaceToggle = this.monkeyRaceToggle.bind(this);\r\n        this.getBananaCount = this.getBananaCount.bind(this);\r\n        this.onTakePhoto = this.onTakePhoto.bind(this);\r\n        this.toggleCamera = this.toggleCamera.bind(this);\r\n    }\r\n\r\n    onTakePhoto(dataURI: any): void {\r\n        let tempUI: IMyuiInterface = this.state.ui;\r\n        tempUI.photoTaken = true;\r\n        tempUI.itemPhoto = dataURI;\r\n        tempUI.showCamera = false;\r\n        this.setState(() => { return { ui: tempUI } })\r\n    }\r\n\r\n    getBananaCount(user_id: number): number | undefined {\r\n        var lookupUserBananas: Array<ImMonkeyData_Users>;\r\n        lookupUserBananas = this.state.ui.users.filter((el) => (el.user_id === user_id));\r\n        if (lookupUserBananas.length) {\r\n            return lookupUserBananas[0].banana_count;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    lookupStatus(status: string): any {\r\n        var lookupStatus: Array<ImMonkeyData_Status>;\r\n        lookupStatus = this.state.ui.itemStatusList.filter((el) => (el.statusID === parseInt(status)));\r\n        return lookupStatus.length ? {\r\n            actionType: lookupStatus[0].action_type,\r\n            status: lookupStatus[0].status,\r\n            status_verb: lookupStatus[0].status_verb,\r\n            status_active: lookupStatus[0].status_active,\r\n        }\r\n            : { actionType: 0, status: 0, status_verb:'', status_active: false };\r\n    }\r\n\r\n\r\n    monkeyItemAction(event: any, eventitemOrdinal: number): void {\r\n        event.preventDefault();\r\n        this.monkeyItemAction_Do(event.target.value, eventitemOrdinal);\r\n    }\r\n\r\n\r\n    monkeyItemAction_Do(eventVal: string, eventitemOrdinal: number): void {\r\n        const itemOrdinal: number = eventitemOrdinal;\r\n        var newState: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n        var lookupObj: any = this.lookupStatus(eventVal);\r\n\r\n        //console.log(lookupObj);\r\n        newState[itemOrdinal].itemActionType = lookupObj.actionType;\r\n        newState[itemOrdinal].itemStatus = lookupObj.status;\r\n        newState[itemOrdinal].itemStatusID = parseInt(eventVal);\r\n        newState[itemOrdinal].itemStatusVerb = lookupObj.status_verb;\r\n        newState[itemOrdinal].itemStatusActive = lookupObj.status_active;\r\n        newState[itemOrdinal].itemUserID = this.state.user.user_id;\r\n        newState[itemOrdinal].itemUserName = this.state.user.name;\r\n        newState[itemOrdinal].itemChanged = true;\r\n\r\n        this.setState(() => {\r\n            return {\r\n                monkeyData: newState, ui: {\r\n                    updateUser: this.state.ui.updateUser,\r\n                    itemStatusList: this.state.ui.itemStatusList,\r\n                    distinctItems: this.state.ui.distinctItems,\r\n                    users: this.state.ui.users,\r\n                    monkeyChange: true,\r\n                    monkeyLoaded: true,\r\n                    showCamera: false,\r\n                    photoTaken: false,\r\n                    itemPhoto: null,\r\n                } } });\r\n    }\r\n\r\n\r\n    getMonkeyData(): void {\r\n        const getMonkeyDataCB = (mData: ImMonkeyData) => {\r\n            var new_monkeyData: Array<ImMonkeyData_State> = [];\r\n            for (var i = 0; i < mData.groceryListItems.length; i++) {\r\n                new_monkeyData.push(\r\n                    {\r\n                        itemNew: false,\r\n                        itemActionType: 0,\r\n                        itemID: mData.groceryListItems[i].grocery_list_id,\r\n                        itemDate: mData.groceryListItems[i].date,\r\n                        itemName: mData.groceryListItems[i].item,\r\n                        itemCount: mData.groceryListItems[i].count,\r\n                        itemCode: mData.groceryListItems[i].code,\r\n                        itemNotes: mData.groceryListItems[i].notes,\r\n                        itemStatusID: mData.groceryListItems[i].status_id,\r\n                        itemStatus: mData.groceryListItems[i].status,\r\n                        itemStatusVerb: mData.groceryListItems[i].status_verb,\r\n                        itemStatusActive: mData.groceryListItems[i].status_active,\r\n                        itemUserID: mData.groceryListItems[i].user_id,\r\n                        itemUserName: mData.groceryListItems[i].username,\r\n                        itemChanged: false,\r\n                        itemPhoto: mData.groceryListItems[i].photo,\r\n                        itemPhotoURI: mData.groceryListItems[i].photo_location,\r\n                    }\r\n                )\r\n            }\r\n            const new_ui: IMyuiInterface = {\r\n                updateUser: false,\r\n                monkeyChange: false,\r\n                monkeyLoaded: true,\r\n                showCamera: false,\r\n                photoTaken: false,\r\n                itemPhoto: null,\r\n                itemStatusList: mData.groceryItemStatus,\r\n                distinctItems: mData.distinctGroceryListItems,\r\n                users: mData.users,\r\n            };\r\n            this.setState(() => { return { monkeyData: new_monkeyData, ui: new_ui } });\r\n        }\r\n        getAllMonkeyData(this.state.isAuthenticated, getMonkeyDataCB.bind(this));\r\n    }\r\n\r\n    addMonkeyItem(newItemString:string) {\r\n        if (newItemString.length > 0 || this.state.ui.photoTaken) {\r\n            let newItemStringTest: string = newItemString.length ? newItemString : \"Photo Only\";\r\n            var newItemDetails: Array<string> = newItemStringTest.split(',');\r\n            var newMonkeyItemList: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n            var newItemStrip: string = '';\r\n            var newItem: string = '';\r\n            var newQuantity: number = 0;\r\n            var newNotes: string = '';\r\n\r\n            var regex: RegExp = /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|[\\ud83c[\\ude01\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|[\\ud83c[\\ude32\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|[\\ud83c[\\ude50\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g;\r\n\r\n            newItemStrip = newItemDetails[0].replace(regex,'');\r\n\r\n            newItem = newItemStrip.charAt(0).toUpperCase() + newItemStrip.slice(1).toLowerCase();\r\n            //console.log(newItem);\r\n\r\n            if (newItemDetails.length === 2) { newItemDetails[1].length ? newQuantity = parseInt(newItemDetails[1]):newQuantity = 0 }\r\n            else if (newItemDetails.length === 3) { newQuantity = parseInt(newItemDetails[1]); newNotes = newItemDetails[2] }\r\n\r\n            newMonkeyItemList.push({\r\n                itemNew: true,\r\n                itemName: newItem,\r\n                itemCount: newQuantity,\r\n                itemNotes: newNotes,\r\n                itemStatusID: 1,\r\n                itemStatus: \"NEW\",\r\n                itemStatusVerb: 'NEEDS',\r\n                itemStatusActive: true,\r\n                itemActionType: 1,\r\n                itemUserID: this.state.user.user_id,\r\n                itemUserName: this.state.user.name,\r\n                itemCode: searchEmoji(newItem),\r\n                itemDate: dateFormat(new Date(),\"yyyy-mm-dd HH:MM:ss\"),\r\n                itemID: 0,\r\n                itemChanged: false,\r\n                itemPhoto: this.state.ui.photoTaken,\r\n                itemPhotoURI: this.state.ui.photoTaken ? this.state.ui.itemPhoto : null,\r\n            })\r\n\r\n            this.newItem.getInstance().clear();\r\n            this.setState(() => {\r\n                return {\r\n                    monkeyData: newMonkeyItemList,\r\n                    ui: {\r\n                        updateUser: this.state.ui.updateUser,\r\n                        itemStatusList: this.state.ui.itemStatusList,\r\n                        distinctItems: this.state.ui.distinctItems,\r\n                        users: this.state.ui.users,\r\n                        monkeyChange: true,\r\n                        monkeyLoaded: true,\r\n                        showCamera: false,\r\n                        photoTaken: false,\r\n                        itemPhoto: null,\r\n                    }\r\n                }\r\n            })  \r\n        }\r\n    }\r\n\r\n    monkeyDo(): void {\r\n        if (this.state.ui.monkeyChange) {\r\n            var monkeyDataVar: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n            console.log(monkeyDataVar);\r\n            updateMonkeyData(monkeyDataVar, (success: boolean) => {\r\n                if (success) {\r\n\r\n                    this.getMonkeyData();\r\n                    this.setState(() => { return { monkeyDance: true } })\r\n                } else {\r\n                    alert('Error updating database');\r\n                }\r\n            })\r\n        } else {\r\n            this.props.logOff();\r\n        }\r\n    }\r\n\r\n    monkeyAll(): void {\r\n        var newMonkeyState: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n        for (var i: number = 0; i < newMonkeyState.length; i++) {\r\n            var monkeyAllStatus: number = this.state.ui.itemStatusList[this.state.ui.itemStatusList.length - 1].statusID;\r\n            var lookupObj: any = this.lookupStatus(monkeyAllStatus.toString());\r\n\r\n            newMonkeyState[i].itemActionType = lookupObj.actionType;\r\n            newMonkeyState[i].itemStatus = lookupObj.status;\r\n            newMonkeyState[i].itemStatusID = monkeyAllStatus;\r\n            newMonkeyState[i].itemStatusVerb = lookupObj.status_verb;\r\n            newMonkeyState[i].itemStatusActive = lookupObj.status_active;\r\n            newMonkeyState[i].itemUserID = this.state.user.user_id;\r\n            newMonkeyState[i].itemUserName = this.state.user.name;\r\n            newMonkeyState[i].itemChanged = true;\r\n        }\r\n\r\n        this.setState(() => {\r\n            return {\r\n                monkeyData: newMonkeyState, ui: {\r\n                    updateUser: this.state.ui.updateUser,\r\n                    itemStatusList: this.state.ui.itemStatusList,\r\n                    distinctItems: this.state.ui.distinctItems,\r\n                    users: this.state.ui.users,\r\n                    monkeyChange: true,\r\n                    monkeyLoaded: true,\r\n                    showCamera: false,\r\n                    photoTaken: false,\r\n                    itemPhoto: null,\r\n                } } });\r\n    }\r\n\r\n    toggleCamera(arg:boolean) {\r\n        let newUI: IMyuiInterface = this.state.ui;\r\n        newUI.showCamera = arg;\r\n        newUI.photoTaken = false;\r\n        newUI.itemPhoto = null;\r\n        this.setState(() => {\r\n            return {ui:newUI}\r\n            }\r\n        )\r\n    }\r\n\r\n    monkeyDanceToggle() {\r\n        this.setState(() => { return { monkeyDance: !this.state.monkeyDance } })\r\n    }\r\n\r\n    monkeyRaceToggle() {\r\n        this.setState(() => { return { monkeyRace: !this.state.monkeyRace } })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMonkeyData();\r\n    }\r\n\r\n    render() {\r\n        return (    \r\n            <div className=\"Main\" style={{display:\"inline-block\"}}>\r\n                <MonkeyMessage show={this.state.monkeyDance} monkeyDanceToggle={this.monkeyDanceToggle} logOff={this.props.logOff} />\r\n                <MonkeyRace show={this.state.monkeyRace} users={this.state.ui.users} monkeyRaceToggle={this.monkeyRaceToggle} logOff={this.props.logOff} />\r\n                <MonkeyItemPhoto itemPhotoLocation={this.state.monkeyItemPhoto} showItemToggle={() => { this.setState(() => { return { monkeyItemPhoto: null } })}}/>\r\n                <Navbar fixed=\"top\" sticky=\"top\" bg=\"light\" expand=\"xl\" style={{ textAlign:\"left\",verticalAlign: \"middle\", flexDirection: \"row\" }} onToggle={() => { this.toggleCamera(false) }} >\r\n                    <Navbar.Brand  >\r\n                        <Image\r\n                            src=\"/images/favicon.ico\"\r\n                            style={{ width: \"30px\", height: \"30px\", cursor: \"pointer\" }}\r\n                            onClick={() => (this.props.logOff())} />\r\n                    </Navbar.Brand>\r\n                    <div style={{ textAlign: \"left\", width:\"50%\" }}>\r\n                        {' Grocery Monkey - ' + this.state.user.name}\r\n                    </div>  \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\" style={{ width: \"100%\" }}>\r\n                        <div style={{ width: \"100%\", display: \"flex\", textAlign: \"left\", float: \"left\", clear:\"left\" }}>\r\n                            <InputGroup style={{ width: \"100%\" }}>\r\n                                <InputGroup.Prepend>\r\n                                    < Button variant={this.state.ui.photoTaken ? \"primary\" : \"outline-primary\"} onClick={() => { this.toggleCamera(!this.state.ui.showCamera) }} >\r\n                                        <Image\r\n                                            roundedCircle\r\n                                            src=\"/images/camera.png\"\r\n                                            style={{ width: \"20px\", height: \"20px\", cursor:\"pointer\" }}\r\n                                        />\r\n                                    </Button>\r\n                                </InputGroup.Prepend>\r\n                                <Typeahead                                              \r\n                                        id=\"groceryTypeahead\"\r\n                                        selectHintOnEnter\r\n                                        options={this.state.ui.distinctItems.map((el: any, k: number) => { return emoji.emojify(el.code) + el.item })}\r\n                                        placeholder=\"Item, Quantity, Notes\"\r\n                                        clearButton\r\n                                        labelKey=\"item\"\r\n                                        emptyLabel=\"\"\r\n                                        ref={(typeahead: any) => this.newItem = typeahead}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    < Button variant=\"outline-success\" onClick={() => ( this.addMonkeyItem(this.newItem.getInstance().getInput().value)) } >Add</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <div >\r\n                    {this.state.ui.showCamera ?\r\n                        <div style={{ width: \"100%\", height: \"65%\" }}>\r\n                            <Camera\r\n                                onTakePhoto={(dataUri: any) => { this.onTakePhoto(dataUri); }}\r\n                                imageType={IMAGE_TYPES.JPG}\r\n                                imageCompression={0.97}\r\n                                isMaxResolution={false}\r\n                                idealFacingMode={FACING_MODES.ENVIRONMENT}\r\n                                isDisplayStartCameraError={true}\r\n                                isImageMirror={false}\r\n                            />\r\n                            <br />\r\n                        </div>\r\n\r\n                        : null\r\n                    }             \r\n                    {this.state.monkeyData.length ?\r\n                        <ListGroup>\r\n                            {this.state.monkeyData.map((item: ImMonkeyData_State, i: number) => {\r\n                                return (\r\n                                    <ListGroupItem key={i} style={{ display: \"flex\", alignItems: \"center\", backgroundColor: this.state.monkeyData[i].itemChanged ? \"Gainsboro\":\"Transparent\" }}>\r\n                                        <div\r\n                                            style={{\r\n                                                width: \"10%\",\r\n                                                textAlign: \"center\",\r\n                                                display: \"inline-block\",\r\n                                                backgroundColor: \"Transparent\",\r\n                                                cursor: item.itemPhoto ? \"pointer\" : \"default\",\r\n                                            }}\r\n                                        >\r\n                                            <Image className=\"list_profile_img\"\r\n                                                src={item.itemPhoto ?\r\n                                                    item.itemNew ? item.itemPhotoURI : '.images/items/' + item.itemID + 'jpg'\r\n                                                    : './images/users/' + item.itemUserName + '.jpg#' + new Date().getTime()}\r\n                                                roundedCircle\r\n                                                onClick={() => {\r\n                                                    this.setState(() => {\r\n                                                        return {\r\n                                                            monkeyItemPhoto: item.itemPhoto ?\r\n                                                                item.itemNew ? item.itemPhotoURI : '.images/items/' + item.itemID + 'jpg'\r\n                                                                : './images/users/' + item.itemUserName + '.jpg#' + new Date().getTime()\r\n                                                        }\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                            <br />\r\n                                            {item.itemUserName}                                           \r\n                                        </div>\r\n                                        <div style={{ width: \"60%\", textAlign: \"center\", display: \"inline-block\" }}>                                        \r\n                                            <label style={{ cursor: \"pointer\" }} onClick={!this.state.monkeyData[i].itemNew ? () => { this.monkeyItemAction_Do((this.state.ui.itemStatusList.length).toString(), i) } : () => { }} >\r\n                                                \r\n                                                    {emoji.emojify(item.itemCode) + ' ' + item.itemName + (item.itemCount ? ' (' + item.itemCount + ')' : '')}\r\n                                                \r\n                                                <br />\r\n                                                {item.itemNotes}\r\n                                                                                          \r\n                                            </label>\r\n                                        </div>\r\n                                        <div style={{ width: \"30\", textAlign: \"right\", display: \"inline-block\" }}>\r\n                                            <Form>\r\n                                                <Form.Control as=\"select\" value={item.itemStatusID.toString()} onChange={(event: any) => this.monkeyItemAction(event, i)}>\r\n                                                    {this.state.ui.itemStatusList.filter((el) => {\r\n                                                        const isSame: boolean = (this.state.user.user_id === item.itemUserID) || el.action_sameuser;\r\n                                                        return (item.itemNew ? el.action_new && isSame : isSame)\r\n                                                    })\r\n                                                        .map((lookup_item: ImMonkeyData_Status, k: number) => {\r\n                                                            return <option key={k} value={lookup_item.statusID.toString()} > {lookup_item.status}</option>\r\n                                                        })}\r\n                                                </Form.Control>\r\n                                            </Form>                                     \r\n                                        </div>\r\n                                    </ListGroupItem>\r\n                                )\r\n                            })}\r\n                        </ListGroup>\r\n                        : this.state.ui.monkeyLoaded && !this.state.ui.showCamera ?\r\n                            <div style={{ width: \"100%\", alignContent: \"center\", textAlign:\"center\" }}>\r\n                                <br /><br />\r\n                                <Image id=\"sad_fridge\" src='./images/sad_fridge.gif' />\r\n                                <h4>Ain't nobody need nothin....</h4>\r\n                           </div>\r\n                            :null\r\n                        }\r\n                        <br /><br/>\r\n                    </div>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\" fixed=\"bottom\" >\r\n                            <Nav style={{ textAlign: \"left\", width: \"32%\" }}>\r\n                                <div style={{ width: \"100%\", verticalAlign: \"center\" }}>\r\n                                    <NavItem as={Link} to='/user'>\r\n                                        <Image\r\n                                    alt=\"\"\r\n                                    src={'./images/users/' + this.state.user.name + '.jpg#' + new Date().getTime()}\r\n                                            width=\"40\"\r\n                                            height=\"40\"\r\n                                            className=\"profile_Image\"\r\n                                            roundedCircle                              \r\n                                        />\r\n                                    </NavItem>\r\n                                    <span style={{ visibility: \"hidden\" }}>X</span>\r\n                                    <span style={{ color: \"white\", fontWeight: \"bold\", cursor:\"pointer\" }} onClick={()=>(this.monkeyRaceToggle())} >\r\n                                        {emoji.emojify(\":banana:\") + '(' + this.getBananaCount(this.state.user.user_id) + ')'}\r\n                                    </span>                           \r\n                                </div>\r\n                            </Nav>\r\n                            <Nav style={{ textAlign:\"right\",width:\"68%\" }}>\r\n                                <div style={{ width: \"100%\", textAlign: \"right\" }}>\r\n                                    <Button variant=\"light\" onClick={() => this.monkeyAll()}>Monkey All</Button>\r\n                                    <span>{\"  \"}</span>\r\n                                    <Button variant=\"light\" onClick={() => this.monkeyDo()} >\r\n                                        {this.state.ui.monkeyChange? 'Monkey Do' : 'Logoff'}\r\n                                    </Button>\r\n                                </div>\r\n                            </Nav>\r\n                        </Navbar>\r\n                    </div> \r\n        )\r\n    }   \r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Image, Card, Form, Col, Button, Row, Modal} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './user.css';\r\nimport '../functions/fetchfunctions';\r\nimport { ImMonkeyData_Users } from '../constants/constants';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\n// @ts-ignore\r\nimport Camera, { IMAGE_TYPES } from 'react-html5-camera-photo';\r\nimport { updateUserSelfie } from '../functions/fetchfunctions';\r\n\r\n\r\n\r\n\r\ninterface IMyStateInterface {\r\n    changeUser: boolean;\r\n    newSelfie: boolean;\r\n    userSelfie: any;\r\n    selfieChange: boolean;\r\n}\r\n\r\ninterface IMyPropsInterface {\r\n    auth: boolean;\r\n    user: ImMonkeyData_Users;\r\n    updateUser: Function;\r\n}\r\n\r\nclass User extends React.Component<IMyPropsInterface, IMyStateInterface>{\r\n    private userSelfieSubmit: any;\r\n    private userName: any;\r\n    private PIN: any;\r\n    private email: any;\r\n    private sms: any;\r\n    private notify: any;\r\n    constructor(props: IMyPropsInterface) {\r\n        super(props);\r\n        this.userSelfieSubmit = React.createRef();\r\n        this.userName = React.createRef();\r\n        this.PIN = React.createRef();\r\n        this.email = React.createRef();\r\n        this.sms = React.createRef();\r\n        this.notify = React.createRef();\r\n        this.state = { changeUser: false, newSelfie: false, userSelfie: './images/users/' + props.user.name + '.jpg#' + new Date().getTime(), selfieChange:false };\r\n        this.needSave = this.needSave.bind(this);\r\n        this.updateUserLocal = this.updateUserLocal.bind(this);\r\n        this.toggleSelfie = this.toggleSelfie.bind(this);\r\n        this.onTakePhoto = this.onTakePhoto.bind(this);\r\n    }\r\n\r\n    needSave(): void {\r\n        if (!this.state.changeUser) { this.setState(() => { return { changeUser: true } }) };\r\n    }\r\n\r\n    updateUserLocal(event: any): void {\r\n        event.preventDefault();\r\n        const params = {\r\n            user_id: this.props.user.user_id,\r\n            name: this.userName.current.value,\r\n            pin: this.PIN.current.value,\r\n            email: this.email.current.value,\r\n            sms: this.sms.current.value,\r\n            notify: this.notify.current.checked\r\n        };\r\n\r\n        if (this.state.selfieChange) { updateUserSelfie(this.props.user.name, this.state.userSelfie, (success: boolean) => { console.log('File uploaded: ' + success) }) }\r\n        this.props.updateUser(params, () => (this.setState(() => { return { changeUser: false, selfieChange:false } })));\r\n    }\r\n\r\n    onTakePhoto(dataURI: any): void {\r\n        //alert(dataURI);\r\n        this.setState(() => {\r\n            return { userSelfie: dataURI, newSelfie: false, changeUser: true, selfieChange:true }\r\n        });\r\n    }\r\n\r\n    toggleSelfie(): void {\r\n        this.setState(() => { return { newSelfie: !this.state.newSelfie } });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                <div style={{ width: \"90%\", display: \"inline-block\" }}>\r\n                    <MonkeyPicture show={this.state.newSelfie} userName={this.props.user.name} onTakePhoto={this.onTakePhoto} toggleSelfie={this.toggleSelfie} />\r\n                    <br />\r\n                    <Form onSubmit={this.updateUserLocal}>\r\n                        <Card bg=\"light\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n                            <Card.Header>\r\n\r\n                                <div style={{ width: \"100%\", display:\"inline-block\" }}>\r\n                                    <div style={{ display: \"inline-block\", textAlign: \"left\", width: \"50%\" }}>\r\n                                        <Image roundedCircle style={{ width: \"40px\", height: \"40px\", cursor: \"pointer\" }} src={this.state.userSelfie} onClick={() => { this.toggleSelfie() }} />\r\n                                        <span style={{ visibility: \"hidden\" }}>X</span><span style={{ fontWeight: \"bold\" }}>{ this.props.user.name }</span>\r\n                                    </div>\r\n                                    <div style={{display:\"inline-block\",width:\"50%\",textAlign:\"right\"}}>\r\n                                        <Form.Group>  \r\n                                            <Link to='/main'><Button >Back</Button></Link>\r\n                                            <span style={{ visibility: \"hidden\" }}>{'  '}</span>\r\n                                            <Button disabled={!this.state.changeUser} type=\"submit\" >Save</Button>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                                    <Form.Label column sm={2}>\r\n                                        User Name\r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.userName} onChange={() => this.needSave()} placeholder=\"User Name\" defaultValue={this.props.user.name} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalPIN\">\r\n                                    <Form.Label column sm={2}>\r\n                                        PIN\r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.PIN} onChange={() => this.needSave()} type=\"password\" placeholder=\"PIN\" defaultValue={this.props.user.pin} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                                    <Form.Label column sm={2}>\r\n                                        Email\r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.email} onChange={() => this.needSave()} type=\"email\" placeholder=\"Email\" defaultValue={this.props.user.email} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} type=\"email\" controlId=\"formHorizontalSMS\">\r\n                                    <Form.Label column sm={2}>\r\n                                        SMS \r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.sms} onChange={() => this.needSave()} placeholder=\"SMS\" defaultValue={this.props.user.sms} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalCheck\">\r\n                                    <Col sm={{ span: 10, offset: 2 }}>\r\n                                        <Form.Check ref={this.notify} onChange={() => this.needSave()} label=\"Grocery Monkey Notifications\" defaultChecked={this.props.user.notify} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface IM_MonkeyPicture_Props {\r\n    show: boolean;\r\n    userName: string;\r\n    onTakePhoto: Function;\r\n    toggleSelfie: Function;\r\n}\r\n\r\ninterface IM_MonkeyPicture_State {}\r\n\r\nclass MonkeyPicture extends React.Component<IM_MonkeyPicture_Props, IM_MonkeyPicture_State> {\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"90%\", height: \"60%\" }}>\r\n                <Modal size=\"lg\" show={this.props.show} animation centered onHide={() => { this.props.toggleSelfie() }} >\r\n                    <Modal.Header closeButton>\r\n                        <Image fluid roundedCircle style={{ width: \"40px\", height: \"40px\" }} src={'./images/' + this.props.userName + '.jpg'} />\r\n                        <span style={{ visibility: \"hidden\" }}>X</span>\r\n                        <Modal.Title>{this.props.userName + \"'s new selfie\"} </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Camera\r\n                            onTakePhoto={(dataUri: any) => { this.props.onTakePhoto(dataUri); }}\r\n                            imageType={IMAGE_TYPES.JPG}\r\n                            imageCompression={0.97}\r\n                            isMaxResolution={false}\r\n                        />\r\n                    </Modal.Body>\r\n                </ Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router, Redirect, BrowserRouterProps } from 'react-router-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nimport Splash from './components/splash';\r\nimport Main from './components/main';\r\nimport User from './components/user';\r\n\r\nimport { validatePin, updateUser } from './functions/fetchfunctions';\r\nimport { ImMonkeyData_Users } from './constants/constants';\r\n\r\ninterface IMyStateInterface {\r\n    auth: boolean;\r\n    user: ImMonkeyData_Users;\r\n};\r\n\r\ninterface PrivateRouteProps extends BrowserRouterProps {\r\n    component: React.ReactType;\r\n    path: string;\r\n    isAuthenticated: boolean;\r\n    user: ImMonkeyData_Users;\r\n    logOff?: Function;\r\n    updateUser?: Function;\r\n};\r\n\r\nconst PrivateRoute: React.SFC<PrivateRouteProps> = (props: PrivateRouteProps) => {\r\n    const { component: Component, ...rest } = props;\r\n    return (\r\n        <Route {...rest} render={() => (\r\n            props.isAuthenticated === true\r\n                ? <Component {...props} />\r\n                : <Redirect to='/' />\r\n        )} />\r\n    )\r\n};\r\n\r\n\r\nclass AppContainer extends React.Component<{}, IMyStateInterface> {\r\n    constructor(props: React.ReactPropTypes) {\r\n        super(props);\r\n        this.state = {\r\n            auth: false,\r\n            user: {user_id:0, name:''},\r\n        }\r\n        this.authenticatePin = this.authenticatePin.bind(this);\r\n        this.logOff = this.logOff.bind(this);\r\n        this.updateUser = this.updateUser.bind(this);\r\n    }\r\n\r\n    logOff():void {\r\n        this.setState(() => {\r\n            return {\r\n                auth: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    authenticatePin(pin: string, callback: Function): void {\r\n        const userAuth = (authFlag: boolean, user: ImMonkeyData_Users) => {\r\n            this.setState(() => {\r\n                return {\r\n                    auth: authFlag,\r\n                    user: user,\r\n                }\r\n            })\r\n            callback(authFlag);\r\n        }\r\n        validatePin(pin, userAuth.bind(this));\r\n    }\r\n\r\n    updateUser(params: ImMonkeyData_Users, callback: Function): void {\r\n        const updateUserCB = (newUser: ImMonkeyData_Users): void => {\r\n            this.setState(() => { return { user: newUser } });\r\n            callback();\r\n        }\r\n        updateUser(params, updateUserCB.bind(this));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Router>\r\n                <Route exact path=\"/\" render={(props: any) => (<Splash {...props} isAuthenticated={this.state.auth} authenticatePin={this.authenticatePin} />)} />\r\n                <PrivateRoute path=\"/main\" component={Main} isAuthenticated={this.state.auth} user={this.state.user} logOff={this.logOff}/>\r\n                <PrivateRoute path=\"/user\" component={User} isAuthenticated={this.state.auth} user={this.state.user} updateUser={this.updateUser}/>\r\n            </Router>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}