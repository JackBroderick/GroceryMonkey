{"version":3,"sources":["serviceWorker.ts","constants/constants.tsx","components/splash.tsx","components/message.tsx","components/monkeyrace.tsx","functions/fetchfunctions.tsx","components/main.tsx","components/user.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","xheader","Content-Type","emojiMatch","item","Splash","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","PIN","React","createRef","state","redoAuth","isAuthenticated","tryPin","bind","assertThisInitialized","tryPinQuick","pin","length","_this2","cbTryPinB","authFlag","current","value","setState","authenticatePin","_this3","react_default","a","createElement","react_router","to","className","Image","src","style","display","InputGroup","FormControl","autoFocus","ref","placeholder","aria-label","aria-describedby","onChange","Append","cursor","onClick","Text","Fragment","color","Component","MonkeyMessage","monkeyImage","getMonkeyImage","monkeyDir","Math","floor","random","toString","width","height","Modal","animation","centered","show","Header","Title","Body","textAlign","fluid","roundedCircle","Footer","Button","variant","monkeyDanceToggle","logOff","emoji","require","dateFormat","MonkeyRace","monkeyMonth","Date","bananaHistory","getBananas","getBananaHistory","bananaCount","bananaCountString","i","emojify","eventKey","callback","bananaData","fetch","method","headers","body","then","res","json","returnjson","console","log","success","data","getBananaWinnerHistory","getBananaMoochHistory","Tabs","defaultActiveKey","id","onSelect","Tab","title","ListGroup","users","map","user","ListGroupItem","key","alignItems","name","banana_count","monkeyrace_MonkeyTab","label","gif_image","monkeyRaceToggle","MonkeyTab","_this4","banMonth","banUserName","banCount","searchEmoji","itemName","itemName_lcase","toLowerCase","substr","slice","includes","searchList","search","Main","newItem","monkeyDance","monkeyRace","ui","updateUser","monkeyChange","monkeyLoaded","itemStatusList","distinctItems","monkeyData","monkeyItemAction","monkeyItemAction_Do","lookupStatus","addMonkeyItem","monkeyDo","monkeyAll","getBananaCount","user_id","lookupUserBananas","filter","el","status","statusID","parseInt","actionType","action_type","status_verb","status_active","event","eventitemOrdinal","preventDefault","target","eventVal","itemOrdinal","newState","lookupObj","itemActionType","itemStatus","itemStatusID","itemStatusVerb","itemStatusActive","itemUserID","itemUserName","itemChanged","mData","new_monkeyData","groceryListItems","push","itemNew","itemID","grocery_list_id","itemDate","date","itemCount","count","itemCode","code","itemNotes","notes","status_id","username","new_ui","groceryItemStatus","distinctGroceryListItems","JSON","stringify","newItemString","newItemDetails","split","newMonkeyItemList","newItemStrip","newQuantity","newNotes","replace","charAt","toUpperCase","getInstance","clear","userParams_state","_this5","monkeyDataVar","getMonkeyData","alert","_this6","newMonkeyState","monkeyAllStatus","_this7","_this8","_this9","message","monkeyrace","Navbar","fixed","sticky","bg","expand","verticalAlign","Brand","Toggle","aria-controls","Collapse","lib","selectHintOnEnter","options","k","clearButton","labelKey","emptyLabel","typeahead","getInput","backgroundColor","Form","Control","as","isSame","action_sameuser","action_new","lookup_item","alignContent","Nav","NavItem","Link","alt","visibility","fontWeight","User","userName","email","sms","notify","changeUser","newSelfie","needSave","updateUserLocal","toggleSelfie","onTakePhoto","params","checked","dataURI","user_MonkeyPicture","onSubmit","Card","Group","react_router_dom","disabled","type","Row","controlId","Label","column","sm","Col","defaultValue","span","offset","Check","defaultChecked","MonkeyPicture","onHide","closeButton","hidden","build_default","dataUri","idealResolution","imageType","IMAGE_TYPES","JPG","imageCompression","isMaxResolution","PrivateRoute","component","rest","objectWithoutProperties","assign","render","AppContainer","auth","validatePin","userParams","newUser","exact","path","components_splash","src_PrivateRoute","ReactDOM","src_AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4UAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iGCZOC,UAAU,CACnBC,eAAgB,qBAgFPC,EAAmC,CAC5C,CAAEC,KAAM,UAAWJ,MAAO,UAC1B,CAAEI,KAAM,SAAUJ,MAAO,YACzB,CAAEI,KAAM,QAASJ,MAAO,aACxB,CAAEI,KAAM,OAAQJ,MAAO,mBACvB,CAAEI,KAAM,SAAUJ,MAAO,aACzB,CAAEI,KAAM,UAAWJ,MAAO,aAC1B,CAAEI,KAAM,QAASJ,MAAO,oBACxB,CAAEI,KAAM,OAAQJ,MAAO,mBACvB,CAAEI,KAAM,UAAWJ,MAAO,oBAC1B,CAAEI,KAAM,QAASJ,MAAO,WACxB,CAAEI,KAAM,UAAWJ,MAAO,cAC1B,CAAEI,KAAM,UAAWJ,MAAO,iBAC1B,CAAEI,KAAM,QAASJ,MAAO,eACxB,CAAEI,KAAM,QAASJ,MAAO,oBACxB,CAAEI,KAAM,OAAQJ,MAAO,UACvB,CAAEI,KAAM,WAAYJ,MAAO,WAC3B,CAAEI,KAAM,SAAUJ,MAAO,WACzB,CAAEI,KAAM,QAASJ,MAAO,cACxB,CAAEI,KAAM,SAAUJ,MAAO,kBACzB,CAAEI,KAAM,SAAUJ,MAAO,cACzB,CAAEI,KAAM,QAASJ,MAAO,WACxB,CAAEI,KAAM,aAAcJ,MAAO,UAC7B,CAAEI,KAAM,UAAWJ,MAAO,UAC1B,CAAEI,KAAM,QAASJ,MAAO,oBACxB,CAAEI,KAAM,QAASJ,MAAO,WACxB,CAAEI,KAAM,MAAOJ,MAAO,SACtB,CAAEI,KAAM,UAAWJ,MAAO,YAC1B,CAAEI,KAAM,QAASJ,MAAO,YACxB,CAAEI,KAAM,MAAOJ,MAAO,UACtB,CAAEI,KAAM,MAAOJ,MAAO,WACtB,CAAEI,KAAM,MAAOJ,MAAO,cACtB,CAAEI,KAAM,MAAOJ,MAAO,aC9CXK,cAvDX,SAAAA,EAAYC,GAA0B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClCE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAFFQ,SAC8B,EAElCP,EAAKO,IAAMC,IAAMC,YACjBT,EAAKU,MAAQ,CACTC,SAAUX,EAAKD,MAAMa,iBAEzBZ,EAAKa,OAASb,EAAKa,OAAOC,KAAZb,OAAAc,EAAA,EAAAd,CAAAD,IACdA,EAAKgB,YAAchB,EAAKgB,YAAYF,KAAjBb,OAAAc,EAAA,EAAAd,CAAAD,IAPeA,2EAU1BiB,GACW,IAAfA,EAAIC,QAAef,KAAKU,OAAOI,kCAGhCA,GAAa,IAAAE,EAAAhB,KAKViB,EAJW,SAACC,GACVF,EAAKZ,IAAIe,UAAUH,EAAKZ,IAAIe,QAAQC,MAAQ,IAC3CF,GAAYF,EAAKK,SAAS,WAAQ,MAAO,CAAEb,UAAWU,MAEpCP,KAAKX,MAChCA,KAAKJ,MAAM0B,gBAAgBR,EAAKG,oCAG3B,IAAAM,EAAAvB,KACL,OACKA,KAAKJ,MAAMa,gBAyBNe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,UAxBnBJ,EAAAC,EAAAC,cAAA,OAAMG,UAAU,UACZL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOD,UAAU,QAAQE,IAAI,+BAC7BP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEC,QAAS,iBACnBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACQV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIC,WAAS,EACTC,IAAKrC,KAAKI,IACVkC,YAAY,WACZC,aAAW,WACXC,mBAAiB,eACjBC,SAAU,kBAAIlB,EAAKV,YAAYU,EAAKnB,IAAIe,QAAQC,UAEpDI,EAAAC,EAAAC,cAACQ,EAAA,EAAWQ,OAAZ,CAAmBV,MAAO,CAAEW,OAAQ,WAAaC,QAAS,WAAQrB,EAAKb,OAAOa,EAAKnB,IAAIe,QAAQC,SAC/FI,EAAAC,EAAAC,cAACQ,EAAA,EAAWW,KAAZ,gBAGN7C,KAAKO,MAAMC,SAAYgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KAAEtB,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEe,MAAO,YAAavB,EAAAC,EAAAC,cAAA,2BAAiC,cAjDpGrB,IAAM2C,2GC4CZC,cA3CX,SAAAA,EAAYrD,GAA+B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,IACvCpD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,KAAMJ,KACDW,MAAQ,CAAE2C,YAAa,IAC5BrD,EAAKsD,eAAiBtD,EAAKsD,eAAexC,KAApBb,OAAAc,EAAA,EAAAd,CAAAD,IAHiBA,gFAUvC,MADoBuD,wBAAwBC,KAAKC,MAAM,EADpB,EACuBD,KAAKE,UAAkCC,WAAa,mDAI9F,IAAAxC,EAAAhB,KAChBA,KAAKqB,SAAS,WAAQ,MAAO,CAAE6B,YAAalC,EAAKmC,qDAIjD,OACI3B,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACyB,MAAM,MAAMC,OAAO,QAC5BlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,WAAS,EAACC,UAAQ,EAACC,KAAM9D,KAAKJ,MAAMkE,MACnCtC,EAAAC,EAAAC,cAACiC,EAAA,EAAMI,OAAP,KACIvC,EAAAC,EAAAC,cAACiC,EAAA,EAAMK,MAAP,mCAERxC,EAAAC,EAAAC,cAACiC,EAAA,EAAMM,KAAP,CAAYjC,MAAO,CAAEkC,UAAW,WAC5B1C,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,UACjBjC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOqC,OAAK,EAACC,eAAa,EAACrC,IAAK/B,KAAKO,MAAM2C,gBAGnD1B,EAAAC,EAAAC,cAACiC,EAAA,EAAMU,OAAP,KACI7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,YAAY3B,QAAS5C,KAAKJ,MAAM4E,mBAAhD,qBAGAhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,UAAU3B,QAAS5C,KAAKJ,MAAM6E,QAA9C,4BAlCIpE,IAAM2C,6BCX5B0B,EAAQC,EAAQ,KAChBC,EAAaD,EAAQ,KAiBrBE,cACF,SAAAA,EAAYjF,GAA+B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACvChF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,KAAMJ,KACDW,MAAQ,CACT2C,YAAa,qCACb4B,YAAaF,EAAW,IAAIG,KAAQ,QACpCC,cAAe,IAEnBnF,EAAKoF,WAAapF,EAAKoF,WAAWtE,KAAhBb,OAAAc,EAAA,EAAAd,CAAAD,IAClBA,EAAKqF,iBAAmBrF,EAAKqF,iBAAiBvE,KAAtBb,OAAAc,EAAA,EAAAd,CAAAD,IAReA,0EAWhCsF,GACP,IAAIC,EAA4B,GAChC,GAAID,EAAa,CACb,IAAK,IAAIE,EAAY,EAAGA,GAAKF,EAAaE,IACtCD,GAAwCV,EAAMY,QAAQ,YAE1D,OAAOF,EAEP,MAAO,4CAIEG,GAAuB,IAAAvE,EAAAhB,KAC9BwF,EAAW,SAACC,GACdzE,EAAKK,SAAS,WAAQ,MAAO,CAAEyD,YAAY,WAAYE,cAAeS,MAEzD,YAAbF,ECR0B,SAAUC,GAC5CE,MAAmB,0BAA2B,CAAEC,OAAQ,OAAQC,QAASrG,EAASsG,KAAM,KACnFC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACHC,QAAQC,IAAIF,GACZA,EAAWG,QACLZ,EAASS,EAAWI,MACpBb,EAAS,MDEfc,CAAuBd,EAAS7E,KAAKX,OACjB,YAAbuF,ECCkB,SAAUC,GAC3CE,MAAmB,yBAA0B,CAAEC,OAAQ,OAAQC,QAASrG,EAASsG,KAAM,KAClFC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACHC,QAAQC,IAAIF,GACZA,EAAWG,QACLZ,EAASS,EAAWI,MACpBb,EAAS,MDPfe,CAAsBf,EAAS7E,KAAKX,OAEpCA,KAAKqB,SAAS,WAAQ,MAAO,CAAEyD,YAAaF,EAAW,IAAIG,KAAQ,4CAIlE,IAAAxD,EAAAvB,KACL,OACIwB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACyB,MAAM,MAAMC,OAAO,QAC5BlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,WAAS,EAACC,UAAQ,EAACC,KAAM9D,KAAKJ,MAAMkE,MACvCtC,EAAAC,EAAAC,cAACiC,EAAA,EAAMI,OAAP,KACIvC,EAAAC,EAAAC,cAACiC,EAAA,EAAMK,MAAP,KACIxC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOqC,OAAK,EAACC,eAAa,EAACX,MAAM,KAAKC,OAAO,KAAK3B,IAAK/B,KAAKO,MAAM2C,cACjElD,KAAKO,MAAMuE,YAAc,kBAGlCtD,EAAAC,EAAAC,cAACiC,EAAA,EAAMM,KAAP,CAAYjC,MAAO,CAAEkC,UAAW,WAC5B1C,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAMC,iBAAiB,UAAUC,GAAG,WAAWC,SAAU,SAACpB,GAAuBhE,EAAK2D,iBAAiBK,KACnG/D,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAKrB,SAAS,UAAUsB,MAAM,WAC1BrF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,UACjBjC,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACK9G,KAAKJ,MAAMmH,MAAMC,IAAI,SAACC,EAA0B5B,GAC7C,OACI7D,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAeC,IAAK9B,EAAGrD,MAAO,CAAEC,QAAS,OAAQmF,WAAY,WACzD5F,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOS,UAAW,SAAUjC,QAAS,iBACtDT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO2B,MAAM,KAAKC,OAAO,KAAK3B,IAAK,YAAckF,EAAKI,KAAO,OAAQjD,eAAa,IAClF5C,EAAAC,EAAAC,cAAA,WACCuF,EAAKI,MAEV7F,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOS,UAAW,OAAQjC,QAAS,iBACnD,kBAAoBgF,EAAKK,aAAe,MAAQ/F,EAAK0D,WAAWgC,EAAKK,qBAQlG9F,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAKrB,SAAS,UAAUsB,MAAM,WAC1BrF,EAAAC,EAAAC,cAAC6F,EAAD,CAAWC,MAAM,UAAU9C,MAAM,WAAW+C,UAAU,oBAAoBpB,KAAMrG,KAAKO,MAAMyE,iBAE/FxD,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAKrB,SAAS,UAAUsB,MAAM,WAC1BrF,EAAAC,EAAAC,cAAC6F,EAAD,CAAWC,MAAM,WAAW9C,MAAM,kBAAkB+C,UAAU,wBAAwBpB,KAAMrG,KAAKO,MAAMyE,mBAInHxD,EAAAC,EAAAC,cAACiC,EAAA,EAAMU,OAAP,KACI7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,YAAY3B,QAAS5C,KAAKJ,MAAM8H,kBAAhD,qBAGAlG,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,UAAU3B,QAAS5C,KAAKJ,MAAM6E,QAA9C,4BAjFCpE,IAAM2C,WAkGzB2E,mLACO,IAAAC,EAAA5H,KACL,OACIwB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,SACjBjC,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACK9G,KAAKJ,MAAMyG,KAAKW,IAAI,SAAChC,EAAuCK,GACzD,OACI7D,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAeC,IAAK9B,EAAGrD,MAAO,CAAEC,QAAS,OAAQmF,WAAY,WACzD5F,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOS,UAAW,SAAUjC,QAAS,iBACtDT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO2B,MAAM,KAAKC,OAAO,KAAK3B,IAAO6F,EAAKhI,MAAM6H,YAChDjG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAKkD,EAAW,IAAIG,KAAKC,EAAc6C,UAAW,UAEtDrG,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOS,UAAW,SAAUjC,QAAS,iBACtDT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO2B,MAAM,KAAKC,OAAO,KAAK3B,IAAK,YAAciD,EAAc8C,YAAc,OAAQ1D,eAAa,IAClG5C,EAAAC,EAAAC,cAAA,WACCsD,EAAc8C,aAEnBtG,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOS,UAAW,SAAUjC,QAAS,iBACrD2F,EAAKhI,MAAM4H,MAAQ,KAAO9C,EAAMY,QAAQsC,EAAKhI,MAAM8E,OAAS,IAAMM,EAAc+C,SAAW,iBAnBxG1H,IAAM2C,WA8Bf6B,IE7ITH,EAAQC,EAAQ,KAChBC,EAAaD,EAAQ,KA0BrBqD,EAAc,SAACC,GACjB,IAAIC,EAAiBD,EAASE,cAC2B,MAArDD,EAAeE,OAAOF,EAAenH,OAAS,KAAcmH,EAAiBA,EAAeG,MAAM,GAAI,IAC1G,IAAK,IAAIhD,EAAY,EAAGA,EAAI5F,EAAWsB,OAAQsE,IAC3C,GAAI6C,EAAeI,SAAS7I,EAAW4F,GAAG3F,MAAS,OAAOD,EAAW4F,GAAG/F,MAG5E,IAAIiJ,EAAa7D,EAAM8D,OAAON,GAC9B,OAAIK,EAAWxH,OACJ,IAAMwH,EAAW,GAAGpB,IAAM,IAE1B,sBAmWAsB,cA7VX,SAAAA,EAAY7I,GAA0B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IAClC5I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2I,GAAAtI,KAAAH,KAAMJ,KAFF8I,aAC8B,EAElC7I,EAAKU,MAAQ,CACTE,gBAAiBb,EAAMa,gBACvBwG,KAAMrH,EAAMqH,KACZ0B,aAAa,EACbC,YAAY,EACZC,GAAI,CACAC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,eAAgB,GAChBC,cAAe,GACfnC,MAAO,IAEXoC,WAAY,IAEhBtJ,EAAK6I,QAAUrI,IAAMC,YACrBT,EAAKuJ,iBAAmBvJ,EAAKuJ,iBAAiBzI,KAAtBb,OAAAc,EAAA,EAAAd,CAAAD,IACxBA,EAAKwJ,oBAAsBxJ,EAAKwJ,oBAAoB1I,KAAzBb,OAAAc,EAAA,EAAAd,CAAAD,IAC3BA,EAAKyJ,aAAezJ,EAAKyJ,aAAa3I,KAAlBb,OAAAc,EAAA,EAAAd,CAAAD,IACpBA,EAAK0J,cAAgB1J,EAAK0J,cAAc5I,KAAnBb,OAAAc,EAAA,EAAAd,CAAAD,IACrBA,EAAK2J,SAAW3J,EAAK2J,SAAS7I,KAAdb,OAAAc,EAAA,EAAAd,CAAAD,IAChBA,EAAK4J,UAAY5J,EAAK4J,UAAU9I,KAAfb,OAAAc,EAAA,EAAAd,CAAAD,IACjBA,EAAK2E,kBAAoB3E,EAAK2E,kBAAkB7D,KAAvBb,OAAAc,EAAA,EAAAd,CAAAD,IACzBA,EAAK6H,iBAAmB7H,EAAK6H,iBAAiB/G,KAAtBb,OAAAc,EAAA,EAAAd,CAAAD,IACxBA,EAAK6J,eAAiB7J,EAAK6J,eAAe/I,KAApBb,OAAAc,EAAA,EAAAd,CAAAD,IA1BYA,8EA6BvB8J,GACX,IAAIC,EAEJ,OADAA,EAAoB5J,KAAKO,MAAMsI,GAAG9B,MAAM8C,OAAO,SAACC,GAAD,OAASA,EAAGH,UAAYA,KACjD5I,OACX6I,EAAkB,GAAGtC,aAErB,uCAIFyC,GACT,IAAIT,EAEJ,OADAA,EAAetJ,KAAKO,MAAMsI,GAAGI,eAAeY,OAAO,SAACC,GAAD,OAASA,EAAGE,WAAaC,SAASF,KAC9ET,EAAavI,OAAS,CACzBmJ,WAAYZ,EAAa,GAAGa,YAC5BJ,OAAQT,EAAa,GAAGS,OACxBK,YAAad,EAAa,GAAGc,YAC7BC,cAAef,EAAa,GAAGe,eAE7B,CAAEH,WAAY,EAAGH,OAAQ,EAAGK,YAAY,GAAIC,eAAe,4CAIpDC,EAAYC,GACzBD,EAAME,iBACNxK,KAAKqJ,oBAAoBiB,EAAMG,OAAOrJ,MAAOmJ,+CAI7BG,EAAkBH,GAAgC,IAAAvJ,EAAAhB,KAC5D2K,EAAsBJ,EACxBK,EAAsC5K,KAAKO,MAAM4I,WACjD0B,EAAiB7K,KAAKsJ,aAAaoB,GAGvCE,EAASD,GAAaG,eAAiBD,EAAUX,WACjDU,EAASD,GAAaI,WAAaF,EAAUd,OAC7Ca,EAASD,GAAaK,aAAef,SAASS,GAC9CE,EAASD,GAAaM,eAAiBJ,EAAUT,YACjDQ,EAASD,GAAaO,iBAAmBL,EAAUR,cACnDO,EAASD,GAAaQ,WAAanL,KAAKO,MAAM0G,KAAK0C,QACnDiB,EAASD,GAAaS,aAAepL,KAAKO,MAAM0G,KAAKI,KACrDuD,EAASD,GAAaU,aAAc,EAEpCrL,KAAKqB,SAAS,WACV,MAAO,CACH8H,WAAYyB,EAAU/B,GAAI,CACtBC,WAAY9H,EAAKT,MAAMsI,GAAGC,WAC1BG,eAAgBjI,EAAKT,MAAMsI,GAAGI,eAC9BC,cAAelI,EAAKT,MAAMsI,GAAGK,cAC7BnC,MAAO/F,EAAKT,MAAMsI,GAAG9B,MACrBgC,cAAc,EACdC,cAAc,8CAKR,IDhI8BxD,ECgI9BjE,EAAAvB,KAkCDA,KAAKO,MAAME,gBDlKoB+E,ECiIxB,SAAC8F,GAErB,IADA,IAAIC,EAA4C,GACvClG,EAAI,EAAGA,EAAIiG,EAAME,iBAAiBzK,OAAQsE,IAC/CkG,EAAeE,KACX,CACIC,SAAS,EACTZ,eAAgB,EAChBa,OAAQL,EAAME,iBAAiBnG,GAAGuG,gBAClCC,SAAUP,EAAME,iBAAiBnG,GAAGyG,KACpC7D,SAAUqD,EAAME,iBAAiBnG,GAAG3F,KACpCqM,UAAWT,EAAME,iBAAiBnG,GAAG2G,MACrCC,SAAUX,EAAME,iBAAiBnG,GAAG6G,KACpCC,UAAWb,EAAME,iBAAiBnG,GAAG+G,MACrCpB,aAAcM,EAAME,iBAAiBnG,GAAGgH,UACxCtB,WAAYO,EAAME,iBAAiBnG,GAAG0E,OACtCkB,eAAgBK,EAAME,iBAAiBnG,GAAG+E,YAC1Cc,iBAAkBI,EAAME,iBAAiBnG,GAAGgF,cAC5Cc,WAAYG,EAAME,iBAAiBnG,GAAGsE,QACtCyB,aAAcE,EAAME,iBAAiBnG,GAAGiH,SACxCjB,aAAa,IAIzB,IAAMkB,EAAyB,CAC3BzD,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,eAAgBqC,EAAMkB,kBACtBtD,cAAeoC,EAAMmB,yBACrB1F,MAAOuE,EAAMvE,OAEjBxF,EAAKF,SAAS,WAAQ,MAAO,CAAE8H,WAAYoC,EAAgB1C,GAAI0D,MAEN5L,KAAKX,MDjKtE0F,MAAmB,iBAAkB,CAAEC,OAAQ,OAAQC,QAASrG,EAASsG,KAAM6G,KAAKC,UAAU,MACzF7G,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACHA,EAAWG,QACLZ,EAASS,EAAWI,MACpBb,EAAS,4CC+JToH,GAAsB,IAAAhF,EAAA5H,KAEhC,GAAI4M,EAAc7L,OAAS,EAAG,CAC1B,IAGI2H,EAHAmE,EAAgCD,EAAcE,MAAM,KACpDC,EAA+C/M,KAAKO,MAAM4I,WAC1D6D,EAAuB,GAEvBC,EAAsB,EACtBC,EAAmB,GAMvBxE,GAFAsE,EAAeH,EAAe,GAAGM,QAFb,6rBAE2B,KAExBC,OAAO,GAAGC,cAAgBL,EAAa3E,MAAM,GAAGF,cAGzC,IAA1B0E,EAAe9L,OAA2CkM,EAA3BJ,EAAe,GAAG9L,OAAuBkJ,SAAS4C,EAAe,IAAkB,EACnF,IAA1BA,EAAe9L,SAAgBkM,EAAchD,SAAS4C,EAAe,IAAKK,EAAWL,EAAe,IAE7GE,EAAkBtB,KAAK,CACnBC,SAAS,EACTzD,SAAUS,EACVqD,UAAWkB,EACXd,UAAWe,EACXlC,aAAc,EACdD,WAAY,MACZE,eAAgB,QAChBC,kBAAkB,EAClBJ,eAAgB,EAChBK,WAAYnL,KAAKO,MAAM0G,KAAK0C,QAC5ByB,aAAcpL,KAAKO,MAAM0G,KAAKI,KAC9B4E,SAAUjE,EAAYU,GACtBmD,SAAUjH,EAAW,IAAIG,KAAO,uBAChC4G,OAAQ,EACRN,aAAa,IAGjBrL,KAAK0I,QAAQ4E,cAAcC,QAC3BvN,KAAKqB,SAAS,WACV,MAAO,CACH8H,WAAY4D,EACZlE,GAAI,CACAC,WAAYlB,EAAKrH,MAAMsI,GAAGC,WAC1BG,eAAgBrB,EAAKrH,MAAMsI,GAAGI,eAC9BC,cAAetB,EAAKrH,MAAMsI,GAAGK,cAC7BnC,MAAOa,EAAKrH,MAAMsI,GAAG9B,MACrBgC,cAAc,EACdC,cAAc,0CAOjB,IDxMqBwE,EAA6ChI,ECwMlEiI,EAAAzN,KACb,GAAIA,KAAKO,MAAMsI,GAAGE,aAAc,CAC5B,IAAI2E,EAA2C1N,KAAKO,MAAM4I,WAC1DjD,QAAQC,IAAIuH,GD3MkBF,EC4MbE,ED5M0DlI,EC4M3C,SAACY,GACzBA,GAEAqH,EAAKE,gBACLF,EAAKpM,SAAS,WAAQ,MAAO,CAAEsH,aAAa,MAE5CiF,MAAM,4BDjNtBlI,MAAmB,oBAAqB,CAAEC,OAAQ,MAAOC,QAASrG,EAASsG,KAAM6G,KAAKC,UAAUa,KAC3F1H,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACHA,EAAWG,QACLZ,GAAS,GACTA,GAAS,UCgNfxF,KAAKJ,MAAM6E,6CAMf,IAFc,IAAAoJ,EAAA7N,KACV8N,EAA4C9N,KAAKO,MAAM4I,WAClD9D,EAAY,EAAGA,EAAIyI,EAAe/M,OAAQsE,IAAK,CACpD,IAAI0I,EAA0B/N,KAAKO,MAAMsI,GAAGI,eAAejJ,KAAKO,MAAMsI,GAAGI,eAAelI,OAAS,GAAGiJ,SAChGa,EAAiB7K,KAAKsJ,aAAayE,EAAgBvK,YAEvDsK,EAAezI,GAAGyF,eAAiBD,EAAUX,WAC7C4D,EAAezI,GAAG0F,WAAaF,EAAUd,OACzC+D,EAAezI,GAAG2F,aAAe+C,EACjCD,EAAezI,GAAG4F,eAAiBJ,EAAUT,YAC7C0D,EAAezI,GAAG6F,iBAAmBL,EAAUR,cAC/CyD,EAAezI,GAAG8F,WAAanL,KAAKO,MAAM0G,KAAK0C,QAC/CmE,EAAezI,GAAG+F,aAAepL,KAAKO,MAAM0G,KAAKI,KACjDyG,EAAezI,GAAGgG,aAAc,EAGpCrL,KAAKqB,SAAS,WACV,MAAO,CACH8H,WAAY2E,EAAgBjF,GAAI,CAC5BC,WAAY+E,EAAKtN,MAAMsI,GAAGC,WAC1BG,eAAgB4E,EAAKtN,MAAMsI,GAAGI,eAC9BC,cAAe2E,EAAKtN,MAAMsI,GAAGK,cAC7BnC,MAAO8G,EAAKtN,MAAMsI,GAAG9B,MACrBgC,cAAc,EACdC,cAAc,kDAIV,IAAAgF,EAAAhO,KAChBA,KAAKqB,SAAS,WAAQ,MAAO,CAAEsH,aAAcqF,EAAKzN,MAAMoI,0DAGzC,IAAAsF,EAAAjO,KACfA,KAAKqB,SAAS,WAAQ,MAAO,CAAEuH,YAAaqF,EAAK1N,MAAMqI,0DAIvD5I,KAAK2N,iDAGA,IAAAO,EAAAlO,KACL,OACIwB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAACyM,EAAD,CAAerK,KAAM9D,KAAKO,MAAMoI,YAAanE,kBAAmBxE,KAAKwE,kBAAmBC,OAAQzE,KAAKJ,MAAM6E,SAC3GjD,EAAAC,EAAAC,cAAC0M,EAAD,CAAYtK,KAAM9D,KAAKO,MAAMqI,WAAY7B,MAAO/G,KAAKO,MAAMsI,GAAG9B,MAAOW,iBAAkB1H,KAAK0H,iBAAkBjD,OAAQzE,KAAKJ,MAAM6E,SACjIjD,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAQC,MAAM,MAAMC,OAAO,MAAMC,GAAG,QAAQC,OAAO,KAAKzM,MAAO,CAAE0M,cAAe,WAC5ElN,EAAAC,EAAAC,cAAC2M,EAAA,EAAOM,MAAR,KACInN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIC,IAAI,sBACJC,MAAO,CAAEyB,MAAO,OAAQC,OAAQ,OAAQf,OAAO,WAC/CC,QAAS,kBAAOsL,EAAKtO,MAAM6E,YAC9B,qBAAuBzE,KAAKO,MAAM0G,KAAKI,MAE5C7F,EAAAC,EAAAC,cAAC2M,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7BrN,EAAAC,EAAAC,cAAC2M,EAAA,EAAOS,SAAR,CAAiBpI,GAAG,oBAChBlF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,OAAQxB,QAAS,OAAQiC,UAAW,SACrD1C,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACIV,EAAAC,EAAAC,cAACqN,EAAA,UAAD,CACQrI,GAAG,mBACHsI,mBAAiB,EACjBC,QAASjP,KAAKO,MAAMsI,GAAGK,cAAclC,IAAI,SAAC8C,EAASoF,GAAgB,OAAOxK,EAAMY,QAAQwE,EAAGoC,MAAQpC,EAAGpK,OACtG4C,YAAY,wBACZ6M,aAAW,EACXC,SAAS,OACTC,WAAW,GACXhN,IAAK,SAACiN,GAAD,OAAoBpB,EAAKxF,QAAU4G,KAEhD9N,EAAAC,EAAAC,cAACQ,EAAA,EAAWQ,OAAZ,KACIlB,EAAAC,EAAAC,cAAE4C,EAAA,EAAF,CAASC,QAAQ,kBAAkB3B,QAAS,kBAAQsL,EAAK3E,cAAc2E,EAAKxF,QAAQ4E,cAAciC,WAAWnO,SAA7G,kBAMpBI,EAAAC,EAAAC,cAAA,WACK1B,KAAKO,MAAM4I,WAAWpI,OACnBS,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACK9G,KAAKO,MAAM4I,WAAWnC,IAAI,SAACtH,EAA0B2F,GAClD,OACI7D,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAeC,IAAK9B,EAAGrD,MAAO,CAAEC,QAAS,OAAQmF,WAAY,SAAUoI,gBAAiBtB,EAAK3N,MAAM4I,WAAW9D,GAAGgG,YAAc,YAAY,gBACvI7J,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOS,UAAW,SAAUjC,QAAS,iBACtDT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOD,UAAU,mBAAmBE,IAAK,YAAcrC,EAAK0L,aAAe,OAAQhH,eAAa,IAChG5C,EAAAC,EAAAC,cAAA,WACChC,EAAK0L,cAEV5J,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOS,UAAW,SAAUjC,QAAS,iBACtDT,EAAAC,EAAAC,cAAA,SAAOM,MAAO,CAAEW,OAAQ,WAAaC,QAAUsL,EAAK3N,MAAM4I,WAAW9D,GAAGqG,QAAoG,aAA1F,WAAQwC,EAAK7E,oBAAqB6E,EAAK3N,MAAMsI,GAAGI,eAAelI,OAAQyC,WAAY6B,KAChKX,EAAMY,QAAQ5F,EAAKuM,UAAY,IAAMvM,EAAKuI,UAAYvI,EAAKqM,UAAY,KAAOrM,EAAKqM,UAAY,IAAM,IACtGvK,EAAAC,EAAAC,cAAA,WACChC,EAAKyM,YAGd3K,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,KAAMS,UAAW,QAASjC,QAAS,iBACpDT,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,KACIjO,EAAAC,EAAAC,cAAC+N,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAASvO,MAAO1B,EAAKsL,aAAaxH,WAAYf,SAAU,SAAC6H,GAAD,OAAgB4D,EAAK9E,iBAAiBkB,EAAOjF,KACjH6I,EAAK3N,MAAMsI,GAAGI,eAAeY,OAAO,SAACC,GAClC,IAAM8F,EAAmB1B,EAAK3N,MAAM0G,KAAK0C,UAAYjK,EAAKyL,YAAerB,EAAG+F,gBAC5E,OAAQnQ,EAAKgM,QAAU5B,EAAGgG,YAAcF,EAASA,IAEhD5I,IAAI,SAAC+I,EAAkCb,GACpC,OAAO1N,EAAAC,EAAAC,cAAA,UAAQyF,IAAK+H,EAAG9N,MAAO2O,EAAY/F,SAASxG,YAA5C,IAA2DuM,EAAYhG,iBAShH/J,KAAKO,MAAMsI,GAAGG,aACZxH,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,OAAQuM,aAAc,SAAU9L,UAAU,WAC3D1C,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAO4E,GAAG,aAAa3E,IAAI,4BAC3BP,EAAAC,EAAAC,cAAA,2CAEH,KAELF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,YAEVF,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAQG,GAAG,OAAOjK,QAAQ,OAAOgK,OAAO,SAASD,MAAM,UAC/C9M,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAKjO,MAAO,CAAEkC,UAAW,OAAQT,MAAO,QACpCjC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,OAAQiL,cAAe,WACxClN,EAAAC,EAAAC,cAACwO,EAAA,EAAD,CAASP,GAAIQ,IAAMvO,GAAG,SAClBJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIsO,IAAI,GACJrO,IAAK,YAAc/B,KAAKO,MAAM0G,KAAKI,KAAO,OAC1C5D,MAAM,KACNC,OAAO,KACP7B,UAAU,gBACVuC,eAAa,KAGrB5C,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEqO,WAAY,WAA3B,KACA7O,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEe,MAAO,QAASuN,WAAY,OAAQ3N,OAAO,WAAaC,QAAS,kBAAKsL,EAAKxG,qBACrFhD,EAAMY,QAAQ,YAAc,IAAMtF,KAAK0J,eAAe1J,KAAKO,MAAM0G,KAAK0C,SAAW,OAI9FnI,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAKjO,MAAO,CAAEkC,UAAU,QAAQT,MAAM,QAClCjC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,OAAQS,UAAW,UACpC1C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,QAAQ3B,QAAS,kBAAMsL,EAAKzE,cAA5C,cACAjI,EAAAC,EAAAC,cAAA,YAAO,MACPF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,QAAQ3B,QAAS,kBAAMsL,EAAK1E,aACvCxJ,KAAKO,MAAMsI,GAAGE,aAAc,YAAc,qBArVhE1I,IAAM2C,wEC5BnBuN,cAMF,SAAAA,EAAY3Q,GAA0B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuQ,IAClC1Q,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyQ,GAAApQ,KAAAH,KAAMJ,KANF4Q,cAK8B,EAAA3Q,EAJ9BO,SAI8B,EAAAP,EAH9B4Q,WAG8B,EAAA5Q,EAF9B6Q,SAE8B,EAAA7Q,EAD9B8Q,YAC8B,EAElC9Q,EAAK2Q,SAAWnQ,IAAMC,YACtBT,EAAKO,IAAMC,IAAMC,YACjBT,EAAK4Q,MAAQpQ,IAAMC,YACnBT,EAAK6Q,IAAMrQ,IAAMC,YACjBT,EAAK8Q,OAAStQ,IAAMC,YACpBT,EAAKU,MAAQ,CAAEqQ,YAAY,EAAOC,WAAU,GAC5ChR,EAAKiR,SAAWjR,EAAKiR,SAASnQ,KAAdb,OAAAc,EAAA,EAAAd,CAAAD,IAChBA,EAAKkR,gBAAkBlR,EAAKkR,gBAAgBpQ,KAArBb,OAAAc,EAAA,EAAAd,CAAAD,IACvBA,EAAKmR,aAAenR,EAAKmR,aAAarQ,KAAlBb,OAAAc,EAAA,EAAAd,CAAAD,IACpBA,EAAKoR,YAAcpR,EAAKoR,YAAYtQ,KAAjBb,OAAAc,EAAA,EAAAd,CAAAD,IAXeA,0EAe7BG,KAAKO,MAAMqQ,YAAc5Q,KAAKqB,SAAS,WAAQ,MAAO,CAAEuP,YAAY,6CAG7DtG,GAAkB,IAAAtJ,EAAAhB,KAC9BsK,EAAME,iBACN,IAAM0G,EAAS,CACXvH,QAAS3J,KAAKJ,MAAMqH,KAAK0C,QACzBtC,KAAMrH,KAAKwQ,SAASrP,QAAQC,MAC5BN,IAAKd,KAAKI,IAAIe,QAAQC,MACtBqP,MAAOzQ,KAAKyQ,MAAMtP,QAAQC,MAC1BsP,IAAK1Q,KAAK0Q,IAAIvP,QAAQC,MACtBuP,OAAQ3Q,KAAK2Q,OAAOxP,QAAQgQ,SAEhCnR,KAAKJ,MAAMkJ,WAAWoI,EAAQ,kBAAKlQ,EAAKK,SAAS,WAAM,MAAO,CAAEuP,YAAY,2CAGpEQ,GACRxD,MAAMwD,0CAGW,IAAA7P,EAAAvB,KACjBA,KAAKqB,SAAS,WAAQ,MAAO,CAAEwP,WAAYtP,EAAKhB,MAAMsQ,8CAGjD,IAAAjJ,EAAA5H,KACL,OACIwB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,OAAQS,UAAW,WACpC1C,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOxB,QAAS,iBACjCT,EAAAC,EAAAC,cAAC2P,EAAD,CAAevN,KAAM9D,KAAKO,MAAMsQ,UAAWL,SAAUxQ,KAAKJ,MAAMqH,KAAKI,KAAM4J,YAAajR,KAAKiR,YAAaD,aAAchR,KAAKgR,eAC7HxP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+N,EAAA,EAAD,CAAM6B,SAAUtR,KAAK+Q,iBACjBvP,EAAAC,EAAAC,cAAC6P,EAAA,EAAD,CAAM/C,GAAG,QAAQxM,MAAO,CAAEyB,MAAO,OAAQS,UAAW,SAChD1C,EAAAC,EAAAC,cAAC6P,EAAA,EAAKxN,OAAN,KACIvC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,OAAQxB,QAAQ,iBACjCT,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,QAAQ,eAAeiC,UAAU,OAAQT,MAAM,QACxDjC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOsC,eAAa,EAACpC,MAAO,CAAEyB,MAAO,OAAQC,OAAQ,QAAU3B,IAAK,YAAc/B,KAAKJ,MAAMqH,KAAKI,KAAO,OAAQzE,QAAS,WAAOgF,EAAKoJ,kBACtIxP,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEqO,WAAY,WAA3B,KAA+C7O,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEsO,WAAY,SAAYtQ,KAAKJ,MAAMqH,KAAKI,OAE1G7F,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,QAAQ,eAAewB,MAAM,MAAMS,UAAU,UACtD1C,EAAAC,EAAAC,cAAC+N,EAAA,EAAK+B,MAAN,KACIhQ,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAM7P,GAAG,SAAQJ,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,cACjB9C,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEqO,WAAY,WAAa,MACxC7O,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQoN,UAAW1R,KAAKO,MAAMqQ,WAAYe,KAAK,UAA/C,YAKhBnQ,EAAAC,EAAAC,cAAC6P,EAAA,EAAKtN,KAAN,KACIzC,EAAAC,EAAAC,cAAC+N,EAAA,EAAK+B,MAAN,CAAY7B,GAAIiC,IAAKC,UAAU,sBAC3BrQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKqC,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,aAGAxQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAKD,GAAI,IACLxQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKC,QAAN,CAAcrN,IAAKrC,KAAKwQ,SAAU/N,SAAU,kBAAMmF,EAAKkJ,YAAYxO,YAAY,YAAY4P,aAAclS,KAAKJ,MAAMqH,KAAKI,SAIjI7F,EAAAC,EAAAC,cAAC+N,EAAA,EAAK+B,MAAN,CAAY7B,GAAIiC,IAAKC,UAAU,qBAC3BrQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKqC,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,OAGAxQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAKD,GAAI,IACLxQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKC,QAAN,CAAcrN,IAAKrC,KAAKI,IAAKqC,SAAU,kBAAMmF,EAAKkJ,YAAYa,KAAK,WAAWrP,YAAY,MAAM4P,aAAclS,KAAKJ,MAAMqH,KAAKnG,QAItIU,EAAAC,EAAAC,cAAC+N,EAAA,EAAK+B,MAAN,CAAY7B,GAAIiC,IAAKC,UAAU,uBAC3BrQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKqC,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,SAGAxQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAKD,GAAI,IACLxQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKC,QAAN,CAAcrN,IAAKrC,KAAKyQ,MAAOhO,SAAU,kBAAMmF,EAAKkJ,YAAYa,KAAK,QAAQrP,YAAY,QAAQ4P,aAAclS,KAAKJ,MAAMqH,KAAKwJ,UAIvIjP,EAAAC,EAAAC,cAAC+N,EAAA,EAAK+B,MAAN,CAAY7B,GAAIiC,IAAKD,KAAK,QAAQE,UAAU,qBACxCrQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKqC,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,OAGAxQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAKD,GAAI,IACLxQ,EAAAC,EAAAC,cAAC+N,EAAA,EAAKC,QAAN,CAAcrN,IAAKrC,KAAK0Q,IAAKjO,SAAU,kBAAMmF,EAAKkJ,YAAYxO,YAAY,MAAM4P,aAAclS,KAAKJ,MAAMqH,KAAKyJ,QAItHlP,EAAAC,EAAAC,cAAC+N,EAAA,EAAK+B,MAAN,CAAY7B,GAAIiC,IAAKC,UAAU,uBAC3BrQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAKD,GAAI,CAAEG,KAAM,GAAIC,OAAQ,IACzB5Q,EAAAC,EAAAC,cAAC+N,EAAA,EAAK4C,MAAN,CAAYhQ,IAAKrC,KAAK2Q,OAAQlO,SAAU,kBAAMmF,EAAKkJ,YAAYtJ,MAAM,+BAA+B8K,eAAgBtS,KAAKJ,MAAMqH,KAAK0J,uBA3GzJtQ,IAAM2C,WAgInBuP,mLACO,IAAA9E,EAAAzN,KACL,OACIwB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEyB,MAAO,MAAOC,OAAQ,QAChClC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOG,KAAM9D,KAAKJ,MAAMkE,KAAMF,WAAS,EAACC,UAAQ,EAAC2O,OAAQ,WAAQ/E,EAAK7N,MAAMoR,iBACxExP,EAAAC,EAAAC,cAACiC,EAAA,EAAMI,OAAP,CAAc0O,aAAW,GACrBjR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOqC,OAAK,EAACC,eAAa,EAACpC,MAAO,CAAEyB,MAAO,OAAQC,OAAQ,QAAU3B,IAAK,YAAc/B,KAAKJ,MAAM4Q,SAAW,SAC9GhP,EAAAC,EAAAC,cAAA,QAAMgR,QAAM,GAAZ,OACAlR,EAAAC,EAAAC,cAACiC,EAAA,EAAMK,MAAP,KAAchE,KAAKJ,MAAM4Q,SAAW,gBAApC,MAEJhP,EAAAC,EAAAC,cAACiC,EAAA,EAAMM,KAAP,KACIzC,EAAAC,EAAAC,cAACiR,EAAAlR,EAAD,CACIwP,YAAa,SAAC2B,GAAmBnF,EAAK7N,MAAMqR,YAAY2B,IACxDC,gBAAiB,CAAEpP,MAAO,GAAIC,OAAQ,IACtCoP,UAAWC,cAAYC,IACvBC,iBAAkB,IAClBC,iBAAiB,cAhBjB7S,IAAM2C,WA0BnBuN,ICtJT4C,EAA6C,SAACvT,GAA6B,IAC1DoD,EAAuBpD,EAAlCwT,UAAyBC,EAD4CvT,OAAAwT,EAAA,EAAAxT,CACnCF,EADmC,eAE7E,OACI4B,EAAAC,EAAAC,cAACC,EAAA,EAAD7B,OAAAyT,OAAA,GAAWF,EAAX,CAAiBG,OAAQ,kBACK,IAA1B5T,EAAMa,gBACAe,EAAAC,EAAAC,cAACsB,EAAcpD,GACf4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAMzB6R,cACF,SAAAA,EAAY7T,GAA6B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyT,IACrC5T,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2T,GAAAtT,KAAAH,KAAMJ,KACDW,MAAQ,CACTmT,MAAM,EACNzM,KAAM,CAAC0C,QAAQ,EAAGtC,KAAK,KAE3BxH,EAAKyB,gBAAkBzB,EAAKyB,gBAAgBX,KAArBb,OAAAc,EAAA,EAAAd,CAAAD,IACvBA,EAAK4E,OAAS5E,EAAK4E,OAAO9D,KAAZb,OAAAc,EAAA,EAAAd,CAAAD,IACdA,EAAKiJ,WAAajJ,EAAKiJ,WAAWnI,KAAhBb,OAAAc,EAAA,EAAAd,CAAAD,IARmBA,wEAYrCG,KAAKqB,SAAS,WACV,MAAO,CACHqS,MAAM,6CAKF5S,EAAa0E,GAA0B,IAAAxE,EAAAhB,MHxDhC,SAAUc,EAAa0E,GAC9CE,MAAmB,oBAAqB,CAAEC,OAAQ,OAAQC,QAASrG,EAASsG,KAAM6G,KAAKC,UAAU,CAAE7L,IAAKA,MACnGgF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACHT,EAASS,EAAWG,QAASH,EAAWgB,QG8D5C0M,CAAY7S,EATK,SAACI,EAAmB+F,GACjCjG,EAAKK,SAAS,WACV,MAAO,CACHqS,KAAMxS,EACN+F,KAAMA,KAGdzB,EAAStE,IAEaP,KAAKX,0CAGxBkR,EAA4B1L,GAA0B,IAAAjE,EAAAvB,MHnD3C,SAAU4T,EAAgCpO,GAChEE,MAAmB,cAAe,CAAEC,OAAQ,MAAOC,QAASrG,EAASsG,KAAM6G,KAAKC,UAAUiH,KACrF9N,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACHA,EAAWG,QACLZ,EAASS,EAAWgB,MACpBzB,EAAS,MGkDnBsD,CAAWoI,EAJU,SAAC2C,GAClBtS,EAAKF,SAAS,WAAQ,MAAO,CAAE4F,KAAM4M,KACrCrO,KAE4B7E,KAAKX,wCAGjC,IAAA4H,EAAA5H,KACJ,OACIwB,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,KACIjQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmS,OAAK,EAACC,KAAK,IAAIP,OAAQ,SAAC5T,GAAD,OAAiB4B,EAAAC,EAAAC,cAACsS,EAADlU,OAAAyT,OAAA,GAAY3T,EAAZ,CAAmBa,gBAAiBmH,EAAKrH,MAAMmT,KAAMpS,gBAAiBsG,EAAKtG,sBAC1HE,EAAAC,EAAAC,cAACuS,EAAD,CAAcF,KAAK,QAAQX,UAAW3K,EAAMhI,gBAAiBT,KAAKO,MAAMmT,KAAMzM,KAAMjH,KAAKO,MAAM0G,KAAMxC,OAAQzE,KAAKyE,SAClHjD,EAAAC,EAAAC,cAACuS,EAAD,CAAcF,KAAK,QAAQX,UAAW7C,EAAM9P,gBAAiBT,KAAKO,MAAMmT,KAAMzM,KAAMjH,KAAKO,MAAM0G,KAAM6B,WAAY9I,KAAK8I,qBA9C3GzI,IAAM2C,WAqDjCkR,IAASV,OAAOhS,EAAAC,EAAAC,cAACyS,EAAD,MAAkBC,SAASC,eAAe,SR4CpD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1O,KAAK,SAAA2O,GACjCA,EAAaC","file":"static/js/main.f31780b2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n//export const restAPIURL = 'http://nodeserver:8080';\r\n//export const restAPIURL = 'http://localhost:3000';\r\n\r\nexport const restAPIURL = process.env.NODE_ENV === 'production' ? '' : 'http://nodeserver:8080'\r\n\r\nexport const xheader = {\r\n    \"Content-Type\": \"application/json\"\r\n};\r\n\r\nexport interface ImMonkeyData {\r\n    groceryListItems: Array<ImMonkeyData_GroceryListItems>;\r\n    users: Array<ImMonkeyData_Users>;\r\n    groceryItemStatus: Array<ImMonkeyData_Status>;\r\n    distinctGroceryListItems: Array<ImMonkeyData_Lookup>;\r\n};\r\n\r\nexport interface ImMonkeyData_Users {\r\n    user_id: number;\r\n    name: string;\r\n    pin?: string;\r\n    email?: string;\r\n    sms?: string;\r\n    notify?: boolean;\r\n    banana_count?: number;\r\n};\r\n\r\nexport interface ImMonkeyData_Status {\r\n    statusID: number;\r\n    status: string;\r\n    action_new: boolean;\r\n    action_sameuser: boolean;\r\n    action_type: number;\r\n    status_verb: string;\r\n    status_active: boolean;\r\n};\r\n\r\nexport interface ImMonkeyData_Lookup {\r\n    item: string;\r\n    code: string;\r\n};\r\n\r\nexport interface ImMonkeyData_GroceryListItems {\r\n    grocery_list_id: number;\r\n    date: string;\r\n    item: string;\r\n    count: number;\r\n    code: string;\r\n    notes: string;\r\n    status_id: number;\r\n    status: string;\r\n    status_verb: string;\r\n    status_active: boolean;\r\n    user_id: number;\r\n    username: string;\r\n};\r\n\r\nexport interface ImMonkeyData_State {\r\n    itemNew: boolean;\r\n    itemActionType: number;\r\n    itemID: number;\r\n    itemDate: string;\r\n    itemName: string;\r\n    itemCount: number;\r\n    itemCode: string;\r\n    itemNotes: string;\r\n    itemStatusID: number;\r\n    itemStatus: string;\r\n    itemStatusVerb: string;\r\n    itemStatusActive: boolean;\r\n    itemUserID: number;\r\n    itemUserName: string;\r\n    itemChanged: boolean;\r\n};\r\n\r\nexport interface ImMonkeyBanana_History {\r\n    banMonth: string;\r\n    banUserID: number;\r\n    banUserName: string;\r\n    banCount: number;\r\n}\r\n\r\nexport interface Imemoji_Match {\r\n    item: string;\r\n    match: string;\r\n}\r\n\r\nexport const emojiMatch: Array<Imemoji_Match> = [\r\n    { item: \"natural\", match: \":beer:\" },\r\n    { item: \"toilet\", match: \":toilet:\" },\r\n    { item: \"water\", match: \":droplet:\" },\r\n    { item: \"dud:\", match: \":chocolate_bar:\" },\r\n    { item: \"yogurt\", match: \":custard:\" },\r\n    { item: \"pudding\", match: \":custard:\" },\r\n    { item: \"spoon\", match: \":fork_and_knife:\" },\r\n    { item: \"fork\", match: \":fork_and_knife\" },\r\n    { item: \"utensil\", match: \":fork_and_knife:\" },\r\n    { item: \"pizza\", match: \":pizza:\" },\r\n    { item: \"seagram\", match: \":cocktail:\" },\r\n    { item: \"chicken\", match: \":poultry_leg:\" },\r\n    { item: \"pasta\", match: \":spaghetti:\" },\r\n    { item: \"juice\", match: \":tropical_drink:\" },\r\n    { item: \"milk\", match: \":sake:\" },\r\n    { item: \"lemonade\", match: \":lemon:\" },\r\n    { item: \"arnold\", match: \":lemon:\" },\r\n    { item: \"bagel\", match: \":doughnut:\" },\r\n    { item: \"potato\", match: \":sweet_potato:\" },\r\n    { item: \"sprite\", match: \":sparkles:\" },\r\n    { item: \"polar\", match: \":dizzy:\" },\r\n    { item: \"toothpaste\", match: \":grin:\" },\r\n    { item: \"tylenol\", match: \":pill:\" },\r\n    { item: \"towel\", match: \":page_with_curl:\" },\r\n    { item: \"trash\", match: \":pouch:\" },\r\n    { item: \"egg\", match: \":egg:\" },\r\n    { item: \"ketchup\", match: \":tomato:\" },\r\n    { item: \"salsa\", match: \":tomato:\" },\r\n    { item: \"ham\", match: \":pig2:\" },\r\n    { item: \"mac\", match: \":ramen:\" },\r\n    { item: \"gum\", match: \":seedling:\" },\r\n    { item: \"tea\", match: \":coffee:\" },\r\n] \r\n\r\n\r\n","import React from 'react';\r\nimport { Image, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './splash.css';\r\nimport '../functions/fetchfunctions';\r\n\r\n\r\ninterface IMyStateInterface {\r\n    redoAuth: boolean,\r\n}\r\n\r\ninterface IMyPropsInterface {\r\n    isAuthenticated: boolean,\r\n    authenticatePin: Function,\r\n}\r\n\r\nclass Splash extends React.Component<IMyPropsInterface, IMyStateInterface>{\r\n    private PIN: any;\r\n    constructor(props: IMyPropsInterface) {\r\n        super(props);    \r\n        this.PIN = React.createRef();\r\n        this.state = {\r\n            redoAuth: this.props.isAuthenticated,\r\n        };\r\n        this.tryPin = this.tryPin.bind(this);\r\n        this.tryPinQuick = this.tryPinQuick.bind(this);\r\n    }\r\n\r\n    tryPinQuick(pin: string) {\r\n        if (pin.length === 4) {this.tryPin(pin)}\r\n    }\r\n\r\n    tryPin(pin: string) {\r\n        const cbTryPin = (authFlag: boolean) => {\r\n            if (this.PIN.current) {this.PIN.current.value = ''};\r\n            if (!authFlag) { this.setState(() => { return { redoAuth: !authFlag } }) };\r\n        }\r\n        const cbTryPinB = cbTryPin.bind(this);\r\n        this.props.authenticatePin(pin, cbTryPinB);      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            !this.props.isAuthenticated ?\r\n            < div className=\"Splash\" >\r\n                <br />\r\n                <Image className=\"Image\" src='./images/grocerymonkey.jpg' />\r\n                <br />\r\n                <br />\r\n                <h1>Grocery Monkey</h1>\r\n                <br />\r\n                <div style={{ display: \"inline-block\" }}>\r\n                    <InputGroup >\r\n                            <FormControl\r\n                                autoFocus\r\n                                ref={this.PIN}\r\n                                placeholder=\"User PIN\"\r\n                                aria-label=\"User PIN\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                onChange={()=>this.tryPinQuick(this.PIN.current.value)}\r\n                            />\r\n                            <InputGroup.Append style={{ cursor: \"pointer\" }} onClick={() => { this.tryPin(this.PIN.current.value) }}>\r\n                            <InputGroup.Text>Login</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                    {(this.state.redoAuth) ? <><br /><span style={{ color: \"darkred\" }}><h3>INVALID PIN</h3></span></> : null}\r\n                </div>\r\n                </div >\r\n                : <Redirect to=\"/main\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Splash;\r\n","import React from 'react';\r\nimport { Button, Modal, Image } from 'react-bootstrap';\r\nconst monkeyDir: string = '/images/monkey';\r\n\r\n\r\ninterface Im_MonkeyMessage_Props {\r\n    show: boolean;\r\n    monkeyDanceToggle: any;\r\n    logOff: any;\r\n}\r\n\r\ninterface Im_MonkeyMessage_State {\r\n    monkeyImage: string;\r\n}\r\n\r\n\r\nclass MonkeyMessage extends React.Component<Im_MonkeyMessage_Props, Im_MonkeyMessage_State> {\r\n    constructor(props: Im_MonkeyMessage_Props) {\r\n        super(props);\r\n        this.state = { monkeyImage: ''};\r\n        this.getMonkeyImage = this.getMonkeyImage.bind(this);\r\n    }\r\n\r\n    getMonkeyImage(): string {\r\n        var monkeyImageString: string;\r\n        var monkeyImageDirLength: number = 1;\r\n        monkeyImageString = monkeyDir + '/monkey' + Math.floor(1+(Math.random() * monkeyImageDirLength)).toString() + '.gif';\r\n        return monkeyImageString;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(() => { return { monkeyImage: this.getMonkeyImage() } });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:\"90%\",height:\"50%\"}}>\r\n                <Modal animation centered show={this.props.show} >\r\n                        <Modal.Header >\r\n                            <Modal.Title>You are a Grocery Monkey!</Modal.Title>\r\n                        </Modal.Header>\r\n                    <Modal.Body style={{ textAlign: \"center\" }}>\r\n                        <div style={{ width: \"100%}\" }}>\r\n                            <Image fluid roundedCircle src={this.state.monkeyImage} />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.monkeyDanceToggle}>\r\n                            More Monkey Stuff\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.props.logOff}>\r\n                            No More Monkey\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonkeyMessage;\r\n","import React from 'react';\r\nimport { Button, Modal, Image, ListGroup, ListGroupItem, Tabs, Tab } from 'react-bootstrap';\r\nimport { ImMonkeyData_Users, ImMonkeyBanana_History } from '../constants/constants';\r\nimport { getBananaWinnerHistory } from '../functions/fetchfunctions';\r\nimport { getBananaMoochHistory } from '../functions/fetchfunctions';\r\nconst emoji = require('node-emoji');\r\nconst dateFormat = require('dateformat');\r\n\r\n\r\n\r\ninterface Im_MonkeyMessage_Props {\r\n    show: boolean;\r\n    monkeyRaceToggle: any;\r\n    users: Array<ImMonkeyData_Users>;\r\n    logOff: any;\r\n}\r\n\r\ninterface Im_MonkeyMessage_State {\r\n    monkeyImage: string;\r\n    monkeyMonth: string;\r\n    bananaHistory: Array<ImMonkeyBanana_History>;\r\n}\r\n\r\nclass MonkeyRace extends React.Component<Im_MonkeyMessage_Props, Im_MonkeyMessage_State> {\r\n    constructor(props: Im_MonkeyMessage_Props) {\r\n        super(props);\r\n        this.state = {\r\n            monkeyImage: './images/monkey/monkey_running.gif',\r\n            monkeyMonth: dateFormat(new Date(), 'mmmm'),\r\n            bananaHistory: [],\r\n        };\r\n        this.getBananas = this.getBananas.bind(this);\r\n        this.getBananaHistory = this.getBananaHistory.bind(this);\r\n    }\r\n\r\n    getBananas(bananaCount: number|undefined): string {\r\n        let bananaCountString: string = '';\r\n        if (bananaCount) {\r\n            for (var i: number = 1; i <= bananaCount; i++) {\r\n                bananaCountString = bananaCountString + emoji.emojify(\":banana:\");\r\n            }\r\n            return bananaCountString;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getBananaHistory(eventKey:string): void {\r\n        const callback = (bananaData: Array<ImMonkeyBanana_History>): void => {\r\n            this.setState(() => { return { monkeyMonth:\"Historic\", bananaHistory: bananaData } })\r\n        }\r\n        if (eventKey === \"monkeys\") {\r\n            getBananaWinnerHistory(callback.bind(this));\r\n        } else if (eventKey === \"mooches\") {\r\n            getBananaMoochHistory(callback.bind(this));\r\n        } else {\r\n            this.setState(() => { return { monkeyMonth: dateFormat(new Date(), 'mmmm') } });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:\"90%\",height:\"95%\"}}>\r\n                <Modal animation centered show={this.props.show} >\r\n                    <Modal.Header >\r\n                        <Modal.Title>\r\n                            <Image fluid roundedCircle width=\"60\" height=\"60\" src={this.state.monkeyImage} />\r\n                            {this.state.monkeyMonth + ' Monkey Race!'}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ textAlign: \"center\" }}>\r\n                        <Tabs defaultActiveKey=\"current\" id=\"main_tab\" onSelect={(eventKey: string) => { this.getBananaHistory(eventKey) }}>\r\n                            <Tab eventKey=\"current\" title=\"Current\">\r\n                                <div style={{ width: \"100%}\" }}>\r\n                                    <ListGroup>\r\n                                        {this.props.users.map((user: ImMonkeyData_Users, i: number) => {\r\n                                            return (\r\n                                                <ListGroupItem key={i} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                                    <div style={{ width: \"20%\", textAlign: \"center\", display: \"inline-block\"}}>\r\n                                                        <Image width=\"40\" height=\"40\" src={'./images/' + user.name + '.jpg'} roundedCircle />\r\n                                                        <br />\r\n                                                        {user.name}\r\n                                                    </div>\r\n                                                    <div style={{ width: \"80%\", textAlign: \"left\", display: \"inline-block\" }}>\r\n                                                        {'Banana Count: (' + user.banana_count + ')  ' + this.getBananas(user.banana_count)}\r\n                                                    </div>\r\n                                                </ListGroupItem>\r\n                                            )\r\n                                        })}\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </Tab>\r\n                            <Tab eventKey=\"monkeys\" title=\"Monkeys\" >\r\n                                <MonkeyTab label=\"Bananas\" emoji=\":banana:\" gif_image=\"./images/star.gif\" data={this.state.bananaHistory} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"mooches\" title=\"Mooches\" >\r\n                                <MonkeyTab label=\"Requests\" emoji=\":speak_no_evil:\" gif_image=\"./images/question.gif\" data={this.state.bananaHistory} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.props.monkeyRaceToggle}>\r\n                            More Monkey Stuff\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.props.logOff}>\r\n                            No More Monkey\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IM_MonkeyTab_Props {\r\n    label: string;\r\n    emoji: string;\r\n    gif_image: string;\r\n    data: Array<ImMonkeyBanana_History>;\r\n}\r\n\r\nclass MonkeyTab extends React.Component<IM_MonkeyTab_Props, {}> {\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <ListGroup>\r\n                    {this.props.data.map((bananaHistory: ImMonkeyBanana_History, i: number) => {\r\n                        return (\r\n                            <ListGroupItem key={i} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                <div style={{ width: \"22%\", textAlign: \"center\", display: \"inline-block\" }}>\r\n                                    <Image width=\"50\" height=\"50\" src = {this.props.gif_image} />\r\n                                    <br />\r\n                                    <h5>{dateFormat(new Date(bananaHistory.banMonth), 'mmmm')}</h5>\r\n                                </div>\r\n                                <div style={{ width: \"31%\", textAlign: \"center\", display: \"inline-block\" }}>\r\n                                    <Image width=\"40\" height=\"40\" src={'./images/' + bananaHistory.banUserName + '.jpg'} roundedCircle />\r\n                                    <br />\r\n                                    {bananaHistory.banUserName}\r\n                                </div>\r\n                                <div style={{ width: \"47%\", textAlign: \"center\", display: \"inline-block\" }}>\r\n                                    {this.props.label + ': ' + emoji.emojify(this.props.emoji) + \"(\" + bananaHistory.banCount + \")\"}\r\n                                </div>\r\n                            </ListGroupItem>\r\n                        )\r\n                    })}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonkeyRace;\r\n","\r\nimport { restAPIURL, xheader, ImMonkeyData_Users, ImMonkeyData_State } from '../constants/constants';\r\n\r\n\r\nexport const validatePin = function (pin: string, callback: Function): void {\r\n    fetch(restAPIURL + '/authenticateuser', { method: 'POST', headers: xheader, body: JSON.stringify({ pin: pin }) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            callback(returnjson.success, returnjson.user);\r\n        });\r\n}\r\n\r\nexport const getAllMonkeyData = function (auth:boolean, callback: Function):void {\r\n    fetch(restAPIURL + '/getmonkeydata', { method: 'POST', headers: xheader, body: JSON.stringify({}) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            returnjson.success\r\n                ? callback(returnjson.data)\r\n                : callback({})\r\n        })\r\n}\r\n\r\nexport const updateUser = function (userParams: ImMonkeyData_Users, callback: Function): void {\r\n    fetch(restAPIURL + '/updateuser', { method: 'PUT', headers: xheader, body: JSON.stringify(userParams) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            returnjson.success\r\n                ? callback(returnjson.user)\r\n                : callback({})\r\n        })\r\n}\r\n\r\nexport const updateMonkeyData = function (userParams_state: Array<ImMonkeyData_State>, callback: Function): void {\r\n    fetch(restAPIURL + '/updatemonkeydata', { method: 'PUT', headers: xheader, body: JSON.stringify(userParams_state) })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            returnjson.success\r\n                ? callback(true)\r\n                : callback(false)\r\n        })\r\n\r\n}\r\n\r\nexport const getBananaWinnerHistory = function (callback: Function): void {\r\n    fetch(restAPIURL + '/getbananawinnerhistory', { method: 'POST', headers: xheader, body: '' })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            console.log(returnjson);\r\n            returnjson.success\r\n                ? callback(returnjson.data)\r\n                : callback({})\r\n        })\r\n}\r\n\r\nexport const getBananaMoochHistory = function (callback: Function): void {\r\n    fetch(restAPIURL + '/getbananamoochhistory', { method: 'POST', headers: xheader, body: '' })\r\n        .then(res => res.json())\r\n        .then((returnjson) => {\r\n            console.log(returnjson);\r\n            returnjson.success\r\n                ? callback(returnjson.data)\r\n                : callback({})\r\n        })\r\n}","import React from 'react';\r\nimport { Navbar, Nav, NavItem, Form, InputGroup, ListGroup, Button, Image, ListGroupItem } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport './main.css';\r\nimport { getAllMonkeyData, updateMonkeyData } from '../functions/fetchfunctions';\r\nimport MonkeyMessage from './message';\r\nimport MonkeyRace from './monkeyrace';\r\nimport { ImMonkeyData, ImMonkeyData_State, ImMonkeyData_Lookup, ImMonkeyData_Status, ImMonkeyData_Users, emojiMatch } from '../constants/constants';\r\nconst emoji = require('node-emoji');\r\nconst dateFormat = require('dateformat');\r\n\r\ninterface IMyuiInterface {\r\n    updateUser: boolean;\r\n    monkeyChange: boolean;\r\n    monkeyLoaded: boolean;\r\n    itemStatusList: Array<ImMonkeyData_Status>;\r\n    distinctItems: Array<ImMonkeyData_Lookup>;\r\n    users: Array<ImMonkeyData_Users>;\r\n};\r\n\r\ninterface IMyPropsInterface {\r\n    isAuthenticated: boolean;\r\n    user: ImMonkeyData_Users;\r\n    logOff():void;\r\n};\r\n\r\ninterface IMyStateInterface {\r\n    isAuthenticated: boolean;\r\n    user: ImMonkeyData_Users;\r\n    ui: IMyuiInterface;\r\n    monkeyData: Array<ImMonkeyData_State>;\r\n    monkeyDance: boolean;\r\n    monkeyRace: boolean;\r\n};\r\n\r\nconst searchEmoji = (itemName: String): string => {\r\n    var itemName_lcase = itemName.toLowerCase();\r\n    if (itemName_lcase.substr(itemName_lcase.length - 1) === 's') { itemName_lcase = itemName_lcase.slice(0, -1) }\r\n    for (var i: number = 0; i < emojiMatch.length; i++) {\r\n        if (itemName_lcase.includes(emojiMatch[i].item)) { return emojiMatch[i].match }\r\n    }\r\n\r\n    var searchList = emoji.search(itemName_lcase);\r\n    if (searchList.length) {\r\n        return ':' + searchList[0].key + ':';\r\n    } else {\r\n        return ':shopping_trolley:';\r\n    }\r\n}\r\n\r\nclass Main extends React.Component<IMyPropsInterface, IMyStateInterface> {\r\n    private newItem: any;\r\n    constructor(props: IMyPropsInterface) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticated: props.isAuthenticated,\r\n            user: props.user,\r\n            monkeyDance: false,\r\n            monkeyRace: false,\r\n            ui: {\r\n                updateUser: false,\r\n                monkeyChange: false,\r\n                monkeyLoaded: false,\r\n                itemStatusList: [],\r\n                distinctItems: [],\r\n                users: [],\r\n            },\r\n            monkeyData: [],\r\n        }\r\n        this.newItem = React.createRef();\r\n        this.monkeyItemAction = this.monkeyItemAction.bind(this);\r\n        this.monkeyItemAction_Do = this.monkeyItemAction_Do.bind(this);\r\n        this.lookupStatus = this.lookupStatus.bind(this);\r\n        this.addMonkeyItem = this.addMonkeyItem.bind(this);\r\n        this.monkeyDo = this.monkeyDo.bind(this);\r\n        this.monkeyAll = this.monkeyAll.bind(this);\r\n        this.monkeyDanceToggle = this.monkeyDanceToggle.bind(this);\r\n        this.monkeyRaceToggle = this.monkeyRaceToggle.bind(this);\r\n        this.getBananaCount = this.getBananaCount.bind(this);\r\n    }\r\n\r\n    getBananaCount(user_id: number): number | undefined {\r\n        var lookupUserBananas: Array<ImMonkeyData_Users>;\r\n        lookupUserBananas = this.state.ui.users.filter((el) => (el.user_id === user_id));\r\n        if (lookupUserBananas.length) {\r\n            return lookupUserBananas[0].banana_count;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    lookupStatus(status: string): any {\r\n        var lookupStatus: Array<ImMonkeyData_Status>;\r\n        lookupStatus = this.state.ui.itemStatusList.filter((el) => (el.statusID === parseInt(status)));\r\n        return lookupStatus.length ? {\r\n            actionType: lookupStatus[0].action_type,\r\n            status: lookupStatus[0].status,\r\n            status_verb: lookupStatus[0].status_verb,\r\n            status_active: lookupStatus[0].status_active,\r\n        }\r\n            : { actionType: 0, status: 0, status_verb:'', status_active: false };\r\n    }\r\n\r\n\r\n    monkeyItemAction(event: any, eventitemOrdinal: number): void {\r\n        event.preventDefault();\r\n        this.monkeyItemAction_Do(event.target.value, eventitemOrdinal);\r\n    }\r\n\r\n\r\n    monkeyItemAction_Do(eventVal: string, eventitemOrdinal: number): void {\r\n        const itemOrdinal: number = eventitemOrdinal;\r\n        var newState: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n        var lookupObj: any = this.lookupStatus(eventVal);\r\n\r\n        //console.log(lookupObj);\r\n        newState[itemOrdinal].itemActionType = lookupObj.actionType;\r\n        newState[itemOrdinal].itemStatus = lookupObj.status;\r\n        newState[itemOrdinal].itemStatusID = parseInt(eventVal);\r\n        newState[itemOrdinal].itemStatusVerb = lookupObj.status_verb;\r\n        newState[itemOrdinal].itemStatusActive = lookupObj.status_active;\r\n        newState[itemOrdinal].itemUserID = this.state.user.user_id;\r\n        newState[itemOrdinal].itemUserName = this.state.user.name;\r\n        newState[itemOrdinal].itemChanged = true;\r\n\r\n        this.setState(() => {\r\n            return {\r\n                monkeyData: newState, ui: {\r\n                    updateUser: this.state.ui.updateUser,\r\n                    itemStatusList: this.state.ui.itemStatusList,\r\n                    distinctItems: this.state.ui.distinctItems,\r\n                    users: this.state.ui.users,\r\n                    monkeyChange: true,\r\n                    monkeyLoaded: true,\r\n                } } });\r\n    }\r\n\r\n\r\n    getMonkeyData(): void {\r\n        const getMonkeyDataCB = (mData: ImMonkeyData) => {\r\n            var new_monkeyData: Array<ImMonkeyData_State> = [];\r\n            for (var i = 0; i < mData.groceryListItems.length; i++) {\r\n                new_monkeyData.push(\r\n                    {\r\n                        itemNew: false,\r\n                        itemActionType: 0,\r\n                        itemID: mData.groceryListItems[i].grocery_list_id,\r\n                        itemDate: mData.groceryListItems[i].date,\r\n                        itemName: mData.groceryListItems[i].item,\r\n                        itemCount: mData.groceryListItems[i].count,\r\n                        itemCode: mData.groceryListItems[i].code,\r\n                        itemNotes: mData.groceryListItems[i].notes,\r\n                        itemStatusID: mData.groceryListItems[i].status_id,\r\n                        itemStatus: mData.groceryListItems[i].status,\r\n                        itemStatusVerb: mData.groceryListItems[i].status_verb,\r\n                        itemStatusActive: mData.groceryListItems[i].status_active,\r\n                        itemUserID: mData.groceryListItems[i].user_id,\r\n                        itemUserName: mData.groceryListItems[i].username,\r\n                        itemChanged: false,\r\n                    }\r\n                )\r\n            }\r\n            const new_ui: IMyuiInterface = {\r\n                updateUser: false,\r\n                monkeyChange: false,\r\n                monkeyLoaded: true,\r\n                itemStatusList: mData.groceryItemStatus,\r\n                distinctItems: mData.distinctGroceryListItems,\r\n                users: mData.users,\r\n            };\r\n            this.setState(() => { return { monkeyData: new_monkeyData, ui: new_ui } });\r\n        }\r\n        getAllMonkeyData(this.state.isAuthenticated, getMonkeyDataCB.bind(this));\r\n    }\r\n\r\n    addMonkeyItem(newItemString:string) {\r\n        \r\n        if (newItemString.length > 0) {\r\n            var newItemDetails: Array<string> = newItemString.split(',');\r\n            var newMonkeyItemList: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n            var newItemStrip: string = '';\r\n            var newItem: string = '';\r\n            var newQuantity: number = 0;\r\n            var newNotes: string = '';\r\n\r\n            var regex: RegExp = /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|[\\ud83c[\\ude01\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|[\\ud83c[\\ude32\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|[\\ud83c[\\ude50\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g;\r\n\r\n            newItemStrip = newItemDetails[0].replace(regex,'');\r\n\r\n            newItem = newItemStrip.charAt(0).toUpperCase() + newItemStrip.slice(1).toLowerCase();\r\n            //console.log(newItem);\r\n\r\n            if (newItemDetails.length === 2) { newItemDetails[1].length ? newQuantity = parseInt(newItemDetails[1]):newQuantity = 0 }\r\n            else if (newItemDetails.length === 3) { newQuantity = parseInt(newItemDetails[1]); newNotes = newItemDetails[2] }\r\n\r\n            newMonkeyItemList.push({\r\n                itemNew: true,\r\n                itemName: newItem,\r\n                itemCount: newQuantity,\r\n                itemNotes: newNotes,\r\n                itemStatusID: 1,\r\n                itemStatus: \"NEW\",\r\n                itemStatusVerb: 'NEEDS',\r\n                itemStatusActive: true,\r\n                itemActionType: 1,\r\n                itemUserID: this.state.user.user_id,\r\n                itemUserName: this.state.user.name,\r\n                itemCode: searchEmoji(newItem),\r\n                itemDate: dateFormat(new Date(),\"yyyy-mm-dd HH:MM:ss\"),\r\n                itemID: 0,\r\n                itemChanged: false,\r\n            })\r\n\r\n            this.newItem.getInstance().clear();\r\n            this.setState(() => {\r\n                return {\r\n                    monkeyData: newMonkeyItemList,\r\n                    ui: {\r\n                        updateUser: this.state.ui.updateUser,\r\n                        itemStatusList: this.state.ui.itemStatusList,\r\n                        distinctItems: this.state.ui.distinctItems,\r\n                        users: this.state.ui.users,\r\n                        monkeyChange: true,\r\n                        monkeyLoaded: true,\r\n                    }\r\n                }\r\n            })  \r\n        }\r\n    }\r\n\r\n    monkeyDo(): void {\r\n        if (this.state.ui.monkeyChange) {\r\n            var monkeyDataVar: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n            console.log(monkeyDataVar);\r\n            updateMonkeyData(monkeyDataVar, (success: boolean) => {\r\n                if (success) {\r\n\r\n                    this.getMonkeyData();\r\n                    this.setState(() => { return { monkeyDance: true } })\r\n                } else {\r\n                    alert('Error updating database');\r\n                }\r\n            })\r\n        } else {\r\n            this.props.logOff();\r\n        }\r\n    }\r\n\r\n    monkeyAll(): void {\r\n        var newMonkeyState: Array<ImMonkeyData_State> = this.state.monkeyData;\r\n        for (var i: number = 0; i < newMonkeyState.length; i++) {\r\n            var monkeyAllStatus: number = this.state.ui.itemStatusList[this.state.ui.itemStatusList.length - 1].statusID;\r\n            var lookupObj: any = this.lookupStatus(monkeyAllStatus.toString());\r\n\r\n            newMonkeyState[i].itemActionType = lookupObj.actionType;\r\n            newMonkeyState[i].itemStatus = lookupObj.status;\r\n            newMonkeyState[i].itemStatusID = monkeyAllStatus;\r\n            newMonkeyState[i].itemStatusVerb = lookupObj.status_verb;\r\n            newMonkeyState[i].itemStatusActive = lookupObj.status_active;\r\n            newMonkeyState[i].itemUserID = this.state.user.user_id;\r\n            newMonkeyState[i].itemUserName = this.state.user.name;\r\n            newMonkeyState[i].itemChanged = true;\r\n        }\r\n\r\n        this.setState(() => {\r\n            return {\r\n                monkeyData: newMonkeyState, ui: {\r\n                    updateUser: this.state.ui.updateUser,\r\n                    itemStatusList: this.state.ui.itemStatusList,\r\n                    distinctItems: this.state.ui.distinctItems,\r\n                    users: this.state.ui.users,\r\n                    monkeyChange: true,\r\n                    monkeyLoaded: true,\r\n                } } });\r\n    }\r\n\r\n    monkeyDanceToggle() {\r\n        this.setState(() => { return { monkeyDance: !this.state.monkeyDance } })\r\n    }\r\n\r\n    monkeyRaceToggle() {\r\n        this.setState(() => { return { monkeyRace: !this.state.monkeyRace } })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMonkeyData();\r\n    }\r\n\r\n    render() {\r\n        return (    \r\n            <div className=\"Main\">\r\n                <MonkeyMessage show={this.state.monkeyDance} monkeyDanceToggle={this.monkeyDanceToggle} logOff={this.props.logOff} />\r\n                <MonkeyRace show={this.state.monkeyRace} users={this.state.ui.users} monkeyRaceToggle={this.monkeyRaceToggle} logOff={this.props.logOff} />\r\n                <Navbar fixed=\"top\" sticky=\"top\" bg=\"light\" expand=\"lg\" style={{ verticalAlign: \"middle\" }}>\r\n                    <Navbar.Brand >\r\n                        <Image\r\n                            src=\"/images/favicon.ico\"\r\n                            style={{ width: \"30px\", height: \"30px\", cursor:\"pointer\" }}\r\n                            onClick={() => (this.props.logOff())} />\r\n                        {' Grocery Monkey - ' + this.state.user.name}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <div style={{ width: \"100%\", display: \"flex\", textAlign: \"left\" }}>\r\n                            <InputGroup>\r\n                                <Typeahead                                              \r\n                                        id=\"groceryTypeahead\"\r\n                                        selectHintOnEnter\r\n                                        options={this.state.ui.distinctItems.map((el: any, k: number) => { return emoji.emojify(el.code) + el.item })}\r\n                                        placeholder=\"Item, Quantity, Notes\"\r\n                                        clearButton\r\n                                        labelKey=\"item\"\r\n                                        emptyLabel=\"\"\r\n                                        ref={(typeahead: any) => this.newItem = typeahead}\r\n                                    />\r\n                                <InputGroup.Append>\r\n                                    < Button variant=\"outline-success\" onClick={() => ( this.addMonkeyItem(this.newItem.getInstance().getInput().value)) } > Add Item</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <div >\r\n                    {this.state.monkeyData.length ?\r\n                        <ListGroup>\r\n                            {this.state.monkeyData.map((item: ImMonkeyData_State, i: number) => {\r\n                                return (\r\n                                    <ListGroupItem key={i} style={{ display: \"flex\", alignItems: \"center\", backgroundColor: this.state.monkeyData[i].itemChanged ? \"Gainsboro\":\"Transparent\" }}>\r\n                                        <div style={{ width: \"10%\", textAlign: \"center\", display: \"inline-block\" }}>\r\n                                            <Image className=\"list_profile_img\" src={'./images/' + item.itemUserName + '.jpg'} roundedCircle />\r\n                                            <br />\r\n                                            {item.itemUserName}\r\n                                        </div>\r\n                                        <div style={{ width: \"60%\", textAlign: \"center\", display: \"inline-block\" }}>\r\n                                            <label style={{ cursor: \"pointer\" }} onClick={!this.state.monkeyData[i].itemNew ? () => { this.monkeyItemAction_Do((this.state.ui.itemStatusList.length).toString(), i) } : () => { }} >\r\n                                                {emoji.emojify(item.itemCode) + ' ' + item.itemName + (item.itemCount ? ' (' + item.itemCount + ')' : '')}\r\n                                                <br />\r\n                                                {item.itemNotes}\r\n                                            </label>\r\n                                        </div>\r\n                                        <div style={{ width: \"30\", textAlign: \"right\", display: \"inline-block\" }}>\r\n                                            <Form>\r\n                                                <Form.Control as=\"select\" value={item.itemStatusID.toString()} onChange={(event: any) => this.monkeyItemAction(event, i)}>\r\n                                                    {this.state.ui.itemStatusList.filter((el) => {\r\n                                                        const isSame: boolean = (this.state.user.user_id === item.itemUserID) || el.action_sameuser;\r\n                                                        return (item.itemNew ? el.action_new && isSame : isSame)\r\n                                                    })\r\n                                                        .map((lookup_item: ImMonkeyData_Status, k: number) => {\r\n                                                            return <option key={k} value={lookup_item.statusID.toString()} > {lookup_item.status}</option>\r\n                                                        })}\r\n                                                </Form.Control>\r\n                                            </Form>\r\n                                        </div>\r\n                                    </ListGroupItem>\r\n                                )\r\n                            })}\r\n                        </ListGroup>\r\n                        : this.state.ui.monkeyLoaded ?\r\n                            <div style={{ width: \"100%\", alignContent: \"center\", textAlign:\"center\" }}>\r\n                                <br /><br /><br /><br/><br/>\r\n                                <Image id=\"sad_fridge\" src='./images/sad_fridge.gif' />\r\n                                <h4>Ain't nobody need nothin....</h4>\r\n                           </div>\r\n                            :null\r\n                        }\r\n                        <br /><br/>\r\n                    </div>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\" fixed=\"bottom\" >\r\n                            <Nav style={{ textAlign: \"left\", width: \"32%\" }}>\r\n                                <div style={{ width: \"100%\", verticalAlign: \"center\" }}>\r\n                                    <NavItem as={Link} to='/user'>\r\n                                        <Image\r\n                                            alt=\"\"\r\n                                            src={'./images/' + this.state.user.name + '.jpg'}\r\n                                            width=\"40\"\r\n                                            height=\"40\"\r\n                                            className=\"profile_Image\"\r\n                                            roundedCircle                              \r\n                                        />\r\n                                    </NavItem>\r\n                                    <span style={{ visibility: \"hidden\" }}>X</span>\r\n                                    <span style={{ color: \"white\", fontWeight: \"bold\", cursor:\"pointer\" }} onClick={()=>(this.monkeyRaceToggle())} >\r\n                                        {emoji.emojify(\":banana:\") + '(' + this.getBananaCount(this.state.user.user_id) + ')'}\r\n                                    </span>                           \r\n                                </div>\r\n                            </Nav>\r\n                            <Nav style={{ textAlign:\"right\",width:\"68%\" }}>\r\n                                <div style={{ width: \"100%\", textAlign: \"right\" }}>\r\n                                    <Button variant=\"light\" onClick={() => this.monkeyAll()}>Monkey All</Button>\r\n                                    <span>{\"  \"}</span>\r\n                                    <Button variant=\"light\" onClick={() => this.monkeyDo()} >\r\n                                        {this.state.ui.monkeyChange? 'Monkey Do' : 'Logoff'}\r\n                                    </Button>\r\n                                </div>\r\n                            </Nav>\r\n                        </Navbar>\r\n                    </div> \r\n        )\r\n    }   \r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Image, Card, Form, Col, Button, Row, Modal} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './user.css';\r\nimport '../functions/fetchfunctions';\r\nimport { ImMonkeyData_Users } from '../constants/constants';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\n// @ts-ignore\r\nimport Camera, { IMAGE_TYPES } from 'react-html5-camera-photo';\r\n\r\n\r\n\r\n\r\ninterface IMyStateInterface {\r\n    changeUser: boolean;\r\n    newSelfie: boolean;\r\n}\r\n\r\ninterface IMyPropsInterface {\r\n    auth: boolean;\r\n    user: ImMonkeyData_Users;\r\n    updateUser: Function;\r\n}\r\n\r\nclass User extends React.Component<IMyPropsInterface, IMyStateInterface>{\r\n    private userName: any;\r\n    private PIN: any;\r\n    private email: any;\r\n    private sms: any;\r\n    private notify: any;\r\n    constructor(props: IMyPropsInterface) {\r\n        super(props);\r\n        this.userName = React.createRef();\r\n        this.PIN = React.createRef();\r\n        this.email = React.createRef();\r\n        this.sms = React.createRef();\r\n        this.notify = React.createRef();\r\n        this.state = { changeUser: false, newSelfie:false };\r\n        this.needSave = this.needSave.bind(this);\r\n        this.updateUserLocal = this.updateUserLocal.bind(this);\r\n        this.toggleSelfie = this.toggleSelfie.bind(this);\r\n        this.onTakePhoto = this.onTakePhoto.bind(this);\r\n    }\r\n\r\n    needSave(): void {\r\n        if (!this.state.changeUser) { this.setState(() => { return { changeUser: true } }) };\r\n    }\r\n\r\n    updateUserLocal(event: any): void {\r\n        event.preventDefault();\r\n        const params = {\r\n            user_id: this.props.user.user_id,\r\n            name: this.userName.current.value,\r\n            pin: this.PIN.current.value,\r\n            email: this.email.current.value,\r\n            sms: this.sms.current.value,\r\n            notify: this.notify.current.checked\r\n        };\r\n        this.props.updateUser(params, ()=>(this.setState(()=>{ return { changeUser: false } })) );\r\n    }\r\n\r\n    onTakePhoto(dataURI: any): void {\r\n        alert(dataURI);\r\n    }\r\n\r\n    toggleSelfie(): void {\r\n        this.setState(() => { return { newSelfie: !this.state.newSelfie } });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                <div style={{ width: \"90%\", display: \"inline-block\" }}>\r\n                    <MonkeyPicture show={this.state.newSelfie} userName={this.props.user.name} onTakePhoto={this.onTakePhoto} toggleSelfie={this.toggleSelfie} />\r\n                    <br />\r\n                    <Form onSubmit={this.updateUserLocal}>\r\n                        <Card bg=\"light\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n                            <Card.Header>\r\n                                <div style={{ width: \"100%\", display:\"inline-block\" }}>\r\n                                    <div style={{display:\"inline-block\",textAlign:\"left\", width:\"50%\"}}>\r\n                                        <Image roundedCircle style={{ width: \"40px\", height: \"40px\" }} src={'./images/' + this.props.user.name + '.jpg'} onClick={() => {this.toggleSelfie()}} />\r\n                                        <span style={{ visibility: \"hidden\" }}>X</span><span style={{ fontWeight: \"bold\" }}>{ this.props.user.name }</span>\r\n                                    </div>\r\n                                    <div style={{display:\"inline-block\",width:\"50%\",textAlign:\"right\"}}>\r\n                                        <Form.Group>  \r\n                                            <Link to='/main'><Button >Back</Button></Link>\r\n                                            <span style={{ visibility: \"hidden\" }}>{'  '}</span>\r\n                                            <Button disabled={!this.state.changeUser} type=\"submit\" >Save</Button>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Form.Group as={Row} controlId=\"formHorizontalName\">\r\n                                    <Form.Label column sm={2}>\r\n                                        User Name\r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.userName} onChange={() => this.needSave()} placeholder=\"User Name\" defaultValue={this.props.user.name} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalPIN\">\r\n                                    <Form.Label column sm={2}>\r\n                                        PIN\r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.PIN} onChange={() => this.needSave()} type=\"password\" placeholder=\"PIN\" defaultValue={this.props.user.pin} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                                    <Form.Label column sm={2}>\r\n                                        Email\r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.email} onChange={() => this.needSave()} type=\"email\" placeholder=\"Email\" defaultValue={this.props.user.email} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} type=\"email\" controlId=\"formHorizontalSMS\">\r\n                                    <Form.Label column sm={2}>\r\n                                        SMS \r\n                                    </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.sms} onChange={() => this.needSave()} placeholder=\"SMS\" defaultValue={this.props.user.sms} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalCheck\">\r\n                                    <Col sm={{ span: 10, offset: 2 }}>\r\n                                        <Form.Check ref={this.notify} onChange={() => this.needSave()} label=\"Grocery Monkey Notifications\" defaultChecked={this.props.user.notify} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface IM_MonkeyPicture_Props {\r\n    show: boolean;\r\n    userName: string;\r\n    onTakePhoto: Function;\r\n    toggleSelfie: Function;\r\n}\r\n\r\ninterface IM_MonkeyPicture_State {}\r\n\r\nclass MonkeyPicture extends React.Component<IM_MonkeyPicture_Props, IM_MonkeyPicture_State> {\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"90%\", height: \"60%\" }}>\r\n                <Modal show={this.props.show} animation centered onHide={() => { this.props.toggleSelfie() }} >\r\n                    <Modal.Header closeButton>\r\n                        <Image fluid roundedCircle style={{ width: \"40px\", height: \"40px\" }} src={'./images/' + this.props.userName + '.jpg'} />\r\n                        <span hidden>XXX</span>\r\n                        <Modal.Title>{this.props.userName + \"'s new selfie\"} </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Camera\r\n                            onTakePhoto={(dataUri: any) => { this.props.onTakePhoto(dataUri); }}\r\n                            idealResolution={{ width: 40, height: 40 }}\r\n                            imageType={IMAGE_TYPES.JPG}\r\n                            imageCompression={0.97}\r\n                            isMaxResolution={false}\r\n                        />\r\n                    </Modal.Body>\r\n                </ Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router, Redirect, BrowserRouterProps } from 'react-router-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nimport Splash from './components/splash';\r\nimport Main from './components/main';\r\nimport User from './components/user';\r\n\r\nimport { validatePin, updateUser } from './functions/fetchfunctions';\r\nimport { ImMonkeyData_Users } from './constants/constants';\r\n\r\ninterface IMyStateInterface {\r\n    auth: boolean;\r\n    user: ImMonkeyData_Users;\r\n};\r\n\r\ninterface PrivateRouteProps extends BrowserRouterProps {\r\n    component: React.ReactType;\r\n    path: string;\r\n    isAuthenticated: boolean;\r\n    user: ImMonkeyData_Users;\r\n    logOff?: Function;\r\n    updateUser?: Function;\r\n};\r\n\r\nconst PrivateRoute: React.SFC<PrivateRouteProps> = (props: PrivateRouteProps) => {\r\n    const { component: Component, ...rest } = props;\r\n    return (\r\n        <Route {...rest} render={() => (\r\n            props.isAuthenticated === true\r\n                ? <Component {...props} />\r\n                : <Redirect to='/' />\r\n        )} />\r\n    )\r\n};\r\n\r\n\r\nclass AppContainer extends React.Component<{}, IMyStateInterface> {\r\n    constructor(props: React.ReactPropTypes) {\r\n        super(props);\r\n        this.state = {\r\n            auth: false,\r\n            user: {user_id:0, name:''},\r\n        }\r\n        this.authenticatePin = this.authenticatePin.bind(this);\r\n        this.logOff = this.logOff.bind(this);\r\n        this.updateUser = this.updateUser.bind(this);\r\n    }\r\n\r\n    logOff():void {\r\n        this.setState(() => {\r\n            return {\r\n                auth: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    authenticatePin(pin: string, callback: Function): void {\r\n        const userAuth = (authFlag: boolean, user: ImMonkeyData_Users) => {\r\n            this.setState(() => {\r\n                return {\r\n                    auth: authFlag,\r\n                    user: user,\r\n                }\r\n            })\r\n            callback(authFlag);\r\n        }\r\n        validatePin(pin, userAuth.bind(this));\r\n    }\r\n\r\n    updateUser(params: ImMonkeyData_Users, callback: Function): void {\r\n        const updateUserCB = (newUser: ImMonkeyData_Users): void => {\r\n            this.setState(() => { return { user: newUser } });\r\n            callback();\r\n        }\r\n        updateUser(params, updateUserCB.bind(this));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Router>\r\n                <Route exact path=\"/\" render={(props: any) => (<Splash {...props} isAuthenticated={this.state.auth} authenticatePin={this.authenticatePin} />)} />\r\n                <PrivateRoute path=\"/main\" component={Main} isAuthenticated={this.state.auth} user={this.state.user} logOff={this.logOff}/>\r\n                <PrivateRoute path=\"/user\" component={User} isAuthenticated={this.state.auth} user={this.state.user} updateUser={this.updateUser}/>\r\n            </Router>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}